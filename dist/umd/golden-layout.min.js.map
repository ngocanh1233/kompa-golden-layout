{"version":3,"sources":["webpack://GoldenLayout/webpack/universalModuleDefinition","webpack://GoldenLayout/webpack/bootstrap","webpack://GoldenLayout/external {\"commonjs\":\"jquery\",\"commonjs2\":\"jquery\",\"amd\":\"jquery\",\"root\":\"$\"}","webpack://GoldenLayout/./src/js_es6/utils/utils.js","webpack://GoldenLayout/./src/js_es6/utils/EventEmitter.js","webpack://GoldenLayout/./src/js_es6/utils/ConfigMinifier.js","webpack://GoldenLayout/./src/js_es6/utils/EventHub.js","webpack://GoldenLayout/./src/js_es6/utils/BubblingEvent.js","webpack://GoldenLayout/./src/js_es6/errors/ConfigurationError.js","webpack://GoldenLayout/./src/js_es6/config/ItemDefaultConfig.js","webpack://GoldenLayout/./src/js_es6/items/AbstractContentItem.js","webpack://GoldenLayout/./src/js_es6/utils/DragListener.js","webpack://GoldenLayout/./src/js_es6/controls/DragProxy.js","webpack://GoldenLayout/./src/js_es6/controls/Tab.js","webpack://GoldenLayout/./src/js_es6/controls/HeaderButton.js","webpack://GoldenLayout/./src/js_es6/controls/Header.js","webpack://GoldenLayout/./src/js_es6/items/Stack.js","webpack://GoldenLayout/./src/js_es6/controls/Splitter.js","webpack://GoldenLayout/./src/js_es6/items/RowOrColumn.js","webpack://GoldenLayout/./src/js_es6/items/Root.js","webpack://GoldenLayout/./src/js_es6/container/ItemContainer.js","webpack://GoldenLayout/./src/js_es6/utils/ReactComponentHandler.js","webpack://GoldenLayout/./src/js_es6/items/Component.js","webpack://GoldenLayout/./src/js_es6/controls/BrowserPopout.js","webpack://GoldenLayout/./src/js_es6/controls/DragSource.js","webpack://GoldenLayout/./src/js_es6/controls/DropTargetIndicator.js","webpack://GoldenLayout/./src/js_es6/controls/TransitionIndicator.js","webpack://GoldenLayout/./src/js_es6/config/defaultConfig.js","webpack://GoldenLayout/./src/js_es6/LayoutManager.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getTouchEvent","event","$","zepto","touches","targetTouches","originalEvent","getQueryStringParam","param","location","hash","matches","match","RegExp","search","pair","keyValuePairs","substr","split","params","length","copy","target","source","animFrame","fn","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","indexOf","needle","haystack","Array","Error","isFunction","Int8Array","obj","toString","fnBind","context","boundArgs","undefined","Function","apply","concat","bound","args","slice","arguments","this","getUniqueId","Math","random","replace","stripTags","input","trim","EventEmitter","_mSubscriptions","on","sEvent","fCallback","oContext","push","ctx","emit","subs","unshift","allEventSubs","unbind","bUnbound","splice","off","trigger","ConfigMinifier","_keys","_values","config","min","_nextLevel","minifiedConfig","orig","from","to","translationFn","minKey","parseInt","dictionary","index","EventHub","layoutManager","_layoutManager","_dontPropagateToParent","_childEventSource","_onEventFromThis","_boundOnEventFromChild","_onEventFromChild","isSubWindow","_propagateToParent","_propagateToChildren","__gl","__glArgs","document","createEvent","opener","initEvent","createEventObject","eventType","eventName","dispatchEvent","fireEvent","childGl","openPopouts","getGlInstance","eventHub","_$onEventFromParent","BubblingEvent","origin","isPropagationStopped","ConfigurationError","message","node","itemDefaultConfig","isClosable","reorderEnabled","title","AbstractContentItem","parent","_extendItemNode","type","contentItems","isInitialised","isMaximised","isRoot","isRow","isColumn","isStack","isComponent","_pendingEventPropagations","_throttledEvents","_propagateEvent","content","_createContentItems","functionName","functionArguments","bottomUp","skipSelf","callDownwards","contentItem","keepChild","_$destroy","Root","removeChild","undisplayChild","_$init","oldChild","newChild","_$destroyOldChild","_$normalizeContentItem","parentNode","element","replaceChild","header","tabs","browserPopout","createPopout","emitBubblingEvent","e","preventDefault","_$minimiseItem","_$maximiseItem","selectedItem","selectItem","addClass","removeClass","id","hasId","filter","result","next","getItemsByFilter","item","_$getItemsByProperty","componentName","components","instances","instance","x","y","area","dropTargetIndicator","highlightArea","addChild","_callOnActiveComponents","hide","updateSize","show","methodName","activeContentItem","stacks","getItemsByType","getActiveContentItem","container","remove","offset","width","height","x1","left","y1","top","x2","y2","surface","setSize","childElementContainer","append","oContentItem","createContentItem","_scheduleEventPropagationToLayoutManager","_propagateEventToLayoutManager","DragListener","eElement","nButtonCode","_timeout","_eElement","_oDocument","_eBody","body","_nButtonCode","_nDelay","_nDistance","_nX","_nY","_nOriginalX","_nOriginalY","_bDragging","_fMove","onMouseMove","_fUp","onMouseUp","_fDown","onMouseDown","oEvent","button","coordinates","_getCoordinates","one","_startDrag","abs","clearTimeout","find","css","pageX","pageY","DragProxy","dragListener","originalParent","_dragListener","_contentItem","_originalParent","_area","_lastValidArea","_onDrag","_onDrop","_side","_sided","after","attr","html","_undisplayTree","_$calculateItemAreas","_setDimensions","_minX","_minY","_maxX","_maxY","_width","_height","_setDropPosition","offsetX","offsetY","settings","constrainDragToContainer","_$getArea","_$highlightDropZone","_updateTree","_$onDrop","_$setParent","dimensions","dragProxyWidth","dragProxyHeight","headerHeight","Tab","titleElement","closeElement","isActive","setTitle","_onDragStart","destroy","_onTabClickFn","_onTabClick","_onCloseClickFn","_onCloseClick","_onCloseMousedown","tab","_canDestroy","toggleMaximise","setActiveContentItem","stopPropagation","HeaderButton","label","cssClass","action","_header","_action","controlsContainer","_template","join","Header","selectionEnabled","_onHeaderClick","tabsContainer","tabDropdownContainer","_updateTabSizes","tabsMarkedForRemoval","closeButton","dockButton","tabDropdownButton","hideAdditionalTabsDropdown","_hideAdditionalTabsDropdown","mouseup","_lastVisibleTabIndex","_tabControlOffset","tabControlOffset","_createControls","before","j","activeTab","setActive","activeItemIndex","reorderOnTabMenuClick","position","previous","_docker","docked","_setupHeaderPosition","_isClosable","isDockable","dock","toggle","closeStack","popout","maximiseLabel","minimiseLabel","maximise","maximiseButton","tabDropdownLabel","showTabDropdown","_showAdditionalTabsDropdown","labels","tabDropdown","_getHeaderSetting","_onPopoutClick","showCloseIcon","popoutWholeStack","select","showTabMenu","size","val","tabElement","marginLeft","availableWidth","outerWidth","cumulativeTabWidth","visibleTabWidth","overlap","tabOverlapAllowance","tabOverlapAllowanceExceeded","activeIndex","outerHeight","Stack","_activeContentItem","cfg","hasHeaders","showPopoutIcon","showMaximiseIcon","close","minimise","_dropZones","_dropSegment","_contentAreaDimensions","_dropIndex","dimension","realSize","_$validateClosability","RowOrColumn","isDocked","initialItem","createTab","_$hide","_validateDocking","_$show","removeTab","max","hideTab","len","_$setClosable","_resetHeaderDropZone","stack","rowOrColumn","isVertical","isHorizontal","insertBefore","hasCorrectParent","segment","hoverArea","_highlightHeaderDropZone","_highlightBodyDropZone","getArea","headerArea","contentArea","contentWidth","contentHeight","right","bottom","tabTop","tabLeft","placeHolderLeft","headerOffset","tabWidth","tabsLength","isAboveTab","tabDropPlaceholder","placeHolderTop","innerHeight","side","headerPosition","Splitter","grabSize","_isVertical","_size","_grabSize","_createElement","dragHandle","handleExcessSize","handleExcessPos","_splitterSize","borderWidth","_splitterGrabSize","borderGrabWidth","_isColumn","_dimension","_splitter","_splitterPosition","_splitterMinPosition","_splitterMaxPosition","_$suspendResize","newItemSize","itemSize","splitterElement","_createSplitter","_isDocked","undisplayedItemSize","splitterIndex","childItem","removedItemSize","_calculateRelativeSizes","_setAbsoluteSizes","collapsed","headerSize","required","column","first","last","row","toggleClass","sizeData","_calculateAbsoluteSizes","additionalPixel","itemSizes","totalWidth","totalHeight","totalSplitterSize","totalAssigned","floor","total","itemsWithoutSetDimension","round","_respectMinItemWidth","reducePercent","reducedWidth","entry","minItemWidth","entriesOverMin","totalOverMin","totalUnderMin","remainingWidth","allEntries","splitter","_onSplitterDrag","_onSplitterDragStop","_onSplitterDragStart","count","that","can","_setDockable","arr","minWidth","minHeight","horizontal","vertical","items","_getItemsForSplitter","minSize","beforeMinDim","_getMinimumDimensions","beforeMinSize","afterMinDim","afterMinSize","sizeBefore","sizeAfter","splitterPositionInRange","totalRelativeSize","containerElement","_containerElement","sibbling","ItemContainer","isHidden","_config","_element","_contentElement","percentage","direction","delta","rowOrColumnChild","componentState","state","setState","extend","getState","ReactComponentHandler","_reactComponent","_originalComponentWillUpdate","_container","_initialState","_reactClass","_getReactClass","_render","_destroy","ReactDOM","render","_getReactComponent","getElement","component","componentWillUpdate","_onUpdate","unmountComponentAtNode","nextProps","nextState","reactClass","getComponent","defaultProps","glEventHub","glContainer","ref","_gotReactComponent","props","React","createElement","Component","ComponentConstructor","isReactConfig","componentConfig","_$setSize","shown","_$shown","BrowserPopout","parentId","indexInParent","_dimensions","_parentId","_indexInParent","_popoutWindow","_id","_createWindow","screenX","screenLeft","screenY","screenTop","toConfig","__glInstance","_$closeWindow","getWindow","childConfig","parentItem","getItemsById","checkReadyInterval","url","_createUrl","options","_serializeWindowOptions","innerWidth","menubar","toolbar","personalbar","resizable","scrollbars","status","open","_positionWindow","_onClose","setInterval","_onInitialised","clearInterval","blockedPopoutsThrowError","error","windowOptions","windowOptionsString","urlParts","storageKey","minifyConfig","localStorage","setItem","JSON","stringify","href","moveTo","focus","popIn","DragSource","itemConfig","_itemConfig","_createDragListener","_removeDragListener","dragProxy","transitionIndicator","transitionElements","DropTargetIndicator","TransitionIndicator","_toElement","_fromDimensions","_totalAnimationDuration","_animationStartTime","fromElement","toElement","cssProperty","toDimensions","_measure","animationProgress","Date","now","getTime","currentFrameStyles","opacity","_nextAnimationFrame","defaultConfig","closePopoutsOnUnload","responsiveMode","minItemHeight","popin","LayoutManager","_isFullPage","_resizeTimeoutId","_components","_itemAreas","_resizeFunction","_onResize","_unloadFunction","_onUnload","_maximisedItem","_maximisePlaceholder","_creationTimeoutPassed","_subWindowsCreated","_dragSources","_updatingColumnsResponsive","_firstLoad","_createConfig","_typeToItem","unminifyConfig","constructor","_componentFunction","console","warn","configNode","_$reconcilePopoutWindows","maximisedItemId","getComponentNameFromConfig","componentToUse","_createSubWindows","readyState","init","_adjustToWindowMode","_setContainer","_create","_bindEvents","_adjustColumnsResponsive","ready","forEach","dragSource","typeErrorMsg","keys","objectKeys","configOrContentItem","windowLeft","windowTop","child","isItem","self","addId","isNaN","lm","utils","removeFromArray","_$silent","deselect","_$cleanupBeforeMaximisedItemDestroyed","prepend","removeId","smallestSurface","Infinity","mathingArea","sides","allContentItems","_getAllContentItems","_$createRootItemAreas","contentItemOrConfig","isPlainObject","newContentItem","closed","addChildren","resize","windowConfigKey","getItem","parse","removeItem","nextNode","popInButton","click","offsetHeight","margin","padding","overflow","errorMsg","_useResponsiveLayout","columnCount","stackColumnCount","rootContentItem","firstStackContainer","_findAllStackContainers","_addChildContentItemsToContainer","stackContainers","_findAllStackContainersRecursive"],"mappings":"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","file":"golden-layout.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GoldenLayout\"] = factory(require(\"jquery\"));\n\telse\n\t\troot[\"GoldenLayout\"] = factory(root[\"$\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import $ from 'jquery'\n\nexport function F() {}\n\nexport function getTouchEvent(event){\n    if($.zepto){\n        return event.touches ? event.targetTouches[0] : event;\n    } else {\n        return event.originalEvent && event.originalEvent.touches ? event.originalEvent.touches[0] : event;\n    }\n}\n\nexport function extend(subClass, superClass) {\n    subClass.prototype = createObject(superClass.prototype);\n    subClass.prototype.contructor = subClass;\n}\n\nexport function createObject(prototype) {\n    if (typeof Object.create === 'function') {\n        return Object.create(prototype);\n    } else {\n        F.prototype = prototype;\n        return new F();\n    }\n}\n\nexport function objectKeys(object) {\n    var keys, key;\n\n    if (typeof Object.keys === 'function') {\n        return Object.keys(object);\n    } else {\n        keys = [];\n        for (key in object) {\n            keys.push(key);\n        }\n        return keys;\n    }\n}\n\nexport function getHashValue(key) {\n    var matches = location.hash.match(new RegExp(key + '=([^&]*)'));\n    return matches ? matches[1] : null;\n}\n\nexport function getQueryStringParam(param) {\n    if (window.location.hash) {\n        return getHashValue(param);\n    } else if (!window.location.search) {\n        return null;\n    }\n\n    var keyValuePairs = window.location.search.substr(1).split('&'),\n        params = {},\n        pair,\n        i;\n\n    for (i = 0; i < keyValuePairs.length; i++) {\n        pair = keyValuePairs[i].split('=');\n        params[pair[0]] = pair[1];\n    }\n\n    return params[param] || null;\n}\n\nexport function copy(target, source) {\n    for (var key in source) {\n        target[key] = source[key];\n    }\n    return target;\n}\n\n/**\n * This is based on Paul Irish's shim, but looks quite odd in comparison. Why?\n * Because\n * a) it shouldn't affect the global requestAnimationFrame function\n * b) it shouldn't pass on the time that has passed\n *\n * @param   {Function} fn\n *\n * @returns {void}\n */\nexport function animFrame(fn) {\n    return (window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        function(callback) {\n            window.setTimeout(callback, 1000 / 60);\n        })(function() {\n        fn();\n    });\n}\n\nexport function indexOf(needle, haystack) {\n    if (!(haystack instanceof Array)) {\n        throw new Error('Haystack is not an Array');\n    }\n\n    if (haystack.indexOf) {\n        return haystack.indexOf(needle);\n    } else {\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle) {\n                return i;\n            }\n        }\n        return -1;\n    }\n}\n\n\nexport var isFunction = (typeof /./ != 'function' && typeof Int8Array != 'object') ? \n    function isFunction(obj) {\n        return typeof obj == 'function' || false;\n    } : function isFunction(obj) {\n        return toString.call(obj) === '[object Function]';\n    }\n\nexport function fnBind(fn, context, boundArgs) {\n\n    if (Function.prototype.bind !== undefined) {\n        return Function.prototype.bind.apply(fn, [context].concat(boundArgs || []));\n    }\n\n    var bound = function() {\n\n        // Join the already applied arguments to the now called ones (after converting to an array again).\n        var args = (boundArgs || []).concat(Array.prototype.slice.call(arguments, 0));\n\n        // If not being called as a constructor\n        if (!(this instanceof bound)) {\n            // return the result of the function called bound to target and partially applied.\n            return fn.apply(context, args);\n        }\n        // If being called as a constructor, apply the function bound to self.\n        fn.apply(this, args);\n    };\n    // Attach the prototype of the function to our newly created function.\n    bound.prototype = fn.prototype;\n    return bound;\n}\n\nexport function removeFromArray(item, array) {\n    var index = indexOf(item, array);\n\n    if (index === -1) {\n        throw new Error('Can\\'t remove item from array. Item is not in the array');\n    }\n\n    array.splice(index, 1);\n}\n\nexport function now() {\n    if (typeof Date.now === 'function') {\n        return Date.now();\n    } else {\n        return (new Date()).getTime();\n    }\n}\n\nexport function getUniqueId() {\n    return (Math.random() * 1000000000000000)\n        .toString(36)\n        .replace('.', '');\n}\n\n/**\n * A basic XSS filter. It is ultimately up to the\n * implementing developer to make sure their particular\n * applications and usecases are save from cross site scripting attacks\n *\n * @param   {String} input\n * @param    {Boolean} keepTags\n *\n * @returns {String} filtered input\n */\nexport function filterXss(input, keepTags) {\n\n    var output = input\n        .replace(/javascript/gi, 'j&#97;vascript')\n        .replace(/expression/gi, 'expr&#101;ssion')\n        .replace(/onload/gi, 'onlo&#97;d')\n        .replace(/script/gi, '&#115;cript')\n        .replace(/onerror/gi, 'on&#101;rror');\n\n    if (keepTags === true) {\n        return output;\n    } else {\n        return output\n            .replace(/>/g, '&gt;')\n            .replace(/</g, '&lt;');\n    }\n}\n\n/**\n * Removes html tags from a string\n *\n * @param   {String} input\n *\n * @returns {String} input without tags\n */\nexport function stripTags(input) {\n    return $.trim(input.replace(/(<([^>]+)>)/ig, ''));\n}\n","import {\n    isFunction\n} from '../utils/utils'\n\n/**\n * The name of the event that's triggered for every other event\n *\n * usage\n *\n * myEmitter.on( EventEmitter.ALL_EVENT, function( eventName, argsArray ){\n *  //do stuff\n * });\n *\n * @type {String}\n */\nexport const ALL_EVENT = '__all'\n\n\n/**\n * A generic and very fast EventEmitter\n * implementation. On top of emitting the\n * actual event it emits an\n *\n * EventEmitter.ALL_EVENT\n *\n * event for every event triggered. This allows\n * to hook into it and proxy events forwards\n *\n * @constructor\n */\nexport default class EventEmitter {\n\n    constructor() {\n        this._mSubscriptions = {};\n        this._mSubscriptions[ALL_EVENT] = [];\n\n\n        /**\n         * Listen for events\n         *\n         * @param   {String} sEvent    The name of the event to listen to\n         * @param   {Function} fCallback The callback to execute when the event occurs\n         * @param   {[Object]} oContext The value of the this pointer within the callback function\n         *\n         * @returns {void}\n         */\n        this.on = function(sEvent, fCallback, oContext) {\n            if (!isFunction(fCallback)) {\n                throw new Error('Tried to listen to event ' + sEvent + ' with non-function callback ' + fCallback);\n            }\n\n            if (!this._mSubscriptions[sEvent]) {\n                this._mSubscriptions[sEvent] = [];\n            }\n\n            this._mSubscriptions[sEvent].push({\n                fn: fCallback,\n                ctx: oContext\n            });\n        };\n\n        /**\n         * Emit an event and notify listeners\n         *\n         * @param   {String} sEvent The name of the event\n         * @param    {Mixed}  various additional arguments that will be passed to the listener\n         *\n         * @returns {void}\n         */\n        this.emit = function(sEvent) {\n            var i, ctx, args;\n\n            args = Array.prototype.slice.call(arguments, 1);\n\n            var subs = this._mSubscriptions[sEvent];\n\n            if (subs) {\n                subs = subs.slice();\n                for (i = 0; i < subs.length; i++) {\n                    ctx = subs[i].ctx || {};\n                    subs[i].fn.apply(ctx, args);\n                }\n            }\n\n            args.unshift(sEvent);\n\n            var allEventSubs = this._mSubscriptions[ALL_EVENT].slice()\n\n            for (i = 0; i < allEventSubs.length; i++) {\n                ctx = allEventSubs[i].ctx || {};\n                allEventSubs[i].fn.apply(ctx, args);\n            }\n        };\n\n        /**\n         * Removes a listener for an event, or all listeners if no callback and context is provided.\n         *\n         * @param   {String} sEvent    The name of the event\n         * @param   {Function} fCallback The previously registered callback method (optional)\n         * @param   {Object} oContext  The previously registered context (optional)\n         *\n         * @returns {void}\n         */\n        this.unbind = function(sEvent, fCallback, oContext) {\n            if (!this._mSubscriptions[sEvent]) {\n                throw new Error('No subscribtions to unsubscribe for event ' + sEvent);\n            }\n\n            var i, bUnbound = false;\n\n            for (i = 0; i < this._mSubscriptions[sEvent].length; i++) {\n                if (\n                    (!fCallback || this._mSubscriptions[sEvent][i].fn === fCallback) &&\n                    (!oContext || oContext === this._mSubscriptions[sEvent][i].ctx)\n                ) {\n                    this._mSubscriptions[sEvent].splice(i, 1);\n                    bUnbound = true;\n                }\n            }\n\n            if (bUnbound === false) {\n                throw new Error('Nothing to unbind for ' + sEvent);\n            }\n        };\n\n        /**\n         * Alias for unbind\n         */\n        this.off = this.unbind;\n\n        /**\n         * Alias for emit\n         */\n        this.trigger = this.emit;\n    }\n}\n","import {\n    indexOf\n} from '../utils/utils'\n\n/**\n * Minifies and unminifies configs by replacing frequent keys\n * and values with one letter substitutes. Config options must\n * retain array position/index, add new options at the end.\n *\n * @constructor\n */\n\n\nexport default class ConfigMinifier {\n    constructor() {\n        this._keys = [\n            'settings',\n            'hasHeaders',\n            'constrainDragToContainer',\n            'selectionEnabled',\n            'dimensions',\n            'borderWidth',\n            'minItemHeight',\n            'minItemWidth',\n            'headerHeight',\n            'dragProxyWidth',\n            'dragProxyHeight',\n            'labels',\n            'close',\n            'maximise',\n            'minimise',\n            'popout',\n            'content',\n            'componentName',\n            'componentState',\n            'id',\n            'width',\n            'type',\n            'height',\n            'isClosable',\n            'title',\n            'popoutWholeStack',\n            'openPopouts',\n            'parentId',\n            'activeItemIndex',\n            'reorderEnabled',\n            'borderGrabWidth',\n\n\n\n\n            //Maximum 36 entries, do not cross this line!\n        ];\n        if (this._keys.length > 36) {\n            throw new Error('Too many keys in config minifier map');\n        }\n\n        this._values = [\n            true,\n            false,\n            'row',\n            'column',\n            'stack',\n            'component',\n            'close',\n            'maximise',\n            'minimise',\n            'open in new window'\n        ];\n    }\n\n\n    /**\n     * Takes a GoldenLayout configuration object and\n     * replaces its keys and values recursively with\n     * one letter counterparts\n     *\n     * @param   {Object} config A GoldenLayout config object\n     *\n     * @returns {Object} minified config\n     */\n    minifyConfig(config) {\n        var min = {};\n        this._nextLevel(config, min, '_min');\n        return min;\n    }\n\n    /**\n     * Takes a configuration Object that was previously minified\n     * using minifyConfig and returns its original version\n     *\n     * @param   {Object} minifiedConfig\n     *\n     * @returns {Object} the original configuration\n     */\n    unminifyConfig(minifiedConfig) {\n        var orig = {};\n        this._nextLevel(minifiedConfig, orig, '_max');\n        return orig;\n    }\n\n    /**\n     * Recursive function, called for every level of the config structure\n     *\n     * @param   {Array|Object} orig\n     * @param   {Array|Object} min\n     * @param    {String} translationFn\n     *\n     * @returns {void}\n     */\n    _nextLevel(from, to, translationFn) {\n        var key, minKey;\n\n        for (key in from) {\n\n            /**\n             * For in returns array indices as keys, so let's cast them to numbers\n             */\n            if (from instanceof Array) key = parseInt(key, 10);\n\n            /**\n             * In case something has extended Object prototypes\n             */\n            if (!from.hasOwnProperty(key)) continue;\n\n            /**\n             * Translate the key to a one letter substitute\n             */\n            minKey = this[translationFn](key, this._keys);\n\n            /**\n             * For Arrays and Objects, create a new Array/Object\n             * on the minified object and recurse into it\n             */\n            if (typeof from[key] === 'object') {\n                to[minKey] = from[key] instanceof Array ? [] : {};\n                this._nextLevel(from[key], to[minKey], translationFn);\n\n                /**\n                 * For primitive values (Strings, Numbers, Boolean etc.)\n                 * minify the value\n                 */\n            } else {\n                to[minKey] = this[translationFn](from[key], this._values);\n            }\n        }\n    }\n\n    /**\n     * Minifies value based on a dictionary\n     *\n     * @param   {String|Boolean} value\n     * @param   {Array<String|Boolean>} dictionary\n     *\n     * @returns {String} The minified version\n     */\n    _min(value, dictionary) {\n        /**\n         * If a value actually is a single character, prefix it\n         * with ___ to avoid mistaking it for a minification code\n         */\n        if (typeof value === 'string' && value.length === 1) {\n            return '___' + value;\n        }\n\n        var index = indexOf(value, dictionary);\n\n        /**\n         * value not found in the dictionary, return it unmodified\n         */\n        if (index === -1) {\n            return value;\n\n            /**\n             * value found in dictionary, return its base36 counterpart\n             */\n        } else {\n            return index.toString(36);\n        }\n    }\n\n    _max(value, dictionary) {\n        /**\n         * value is a single character. Assume that it's a translation\n         * and return the original value from the dictionary\n         */\n        if (typeof value === 'string' && value.length === 1) {\n            return dictionary[parseInt(value, 36)];\n        }\n\n        /**\n         * value originally was a single character and was prefixed with ___\n         * to avoid mistaking it for a translation. Remove the prefix\n         * and return the original character\n         */\n        if (typeof value === 'string' && value.substr(0, 3) === '___') {\n            return value[3];\n        }\n        /**\n         * value was not minified\n         */\n        return value;\n    }\n}\n\n","import EventEmitter from '../utils/EventEmitter'\nimport { \n  ALL_EVENT\n} from '../utils/EventEmitter'\nimport {\n    fnBind\n} from '../utils/utils'\nimport $ from 'jquery'\n\n/**\n * An EventEmitter singleton that propagates events\n * across multiple windows. This is a little bit trickier since\n * windows are allowed to open childWindows in their own right\n *\n * This means that we deal with a tree of windows. Hence the rules for event propagation are:\n *\n * - Propagate events from this layout to both parents and children\n * - Propagate events from parent to this and children\n * - Propagate events from children to the other children (but not the emitting one) and the parent\n *\n * @constructor\n *\n * @param {lm.LayoutManager} layoutManager\n */\n\n\nexport default class EventHub extends EventEmitter {\n    constructor(layoutManager) {\n        \n        super();\n\n        this._layoutManager = layoutManager;\n        this._dontPropagateToParent = null;\n        this._childEventSource = null;\n        this.on(ALL_EVENT, fnBind(this._onEventFromThis, this));\n        this._boundOnEventFromChild = fnBind(this._onEventFromChild, this);\n        $(window).on('gl_child_event', this._boundOnEventFromChild);\n    }\n\n    /**\n     * Called on every event emitted on this eventHub, regardles of origin.\n     *\n     * @private\n     *\n     * @param {Mixed}\n     *\n     * @returns {void}\n     */\n    _onEventFromThis() {\n        var args = Array.prototype.slice.call(arguments);\n\n        if (this._layoutManager.isSubWindow && args[0] !== this._dontPropagateToParent) {\n            this._propagateToParent(args);\n        }\n        this._propagateToChildren(args);\n\n        //Reset\n        this._dontPropagateToParent = null;\n        this._childEventSource = null;\n    }\n\n    /**\n     * Called by the parent layout.\n     *\n     * @param   {Array} args Event name + arguments\n     *\n     * @returns {void}\n     */\n    _$onEventFromParent(args) {\n        this._dontPropagateToParent = args[0];\n        this.emit.apply(this, args);\n    }\n\n    /**\n     * Callback for child events raised on the window\n     *\n     * @param   {DOMEvent} event\n     * @private\n     *\n     * @returns {void}\n     */\n    _onEventFromChild(event) {\n        this._childEventSource = event.originalEvent.__gl;\n        this.emit.apply(this, event.originalEvent.__glArgs);\n    }\n\n    /**\n     * Propagates the event to the parent by emitting\n     * it on the parent's DOM window\n     *\n     * @param   {Array} args Event name + arguments\n     * @private\n     *\n     * @returns {void}\n     */\n    _propagateToParent(args) {\n        var event,\n            eventName = 'gl_child_event';\n\n        if (document.createEvent) {\n            event = window.opener.document.createEvent('HTMLEvents');\n            event.initEvent(eventName, true, true);\n        } else {\n            event = window.opener.document.createEventObject();\n            event.eventType = eventName;\n        }\n\n        event.eventName = eventName;\n        event.__glArgs = args;\n        event.__gl = this._layoutManager;\n\n        if (document.createEvent) {\n            window.opener.dispatchEvent(event);\n        } else {\n            window.opener.fireEvent('on' + event.eventType, event);\n        }\n    }\n\n    /**\n     * Propagate events to children\n     *\n     * @param   {Array} args Event name + arguments\n     * @private\n     *\n     * @returns {void}\n     */\n    _propagateToChildren(args) {\n        var childGl, i;\n\n        for (i = 0; i < this._layoutManager.openPopouts.length; i++) {\n            childGl = this._layoutManager.openPopouts[i].getGlInstance();\n\n            if (childGl && childGl !== this._childEventSource) {\n                childGl.eventHub._$onEventFromParent(args);\n            }\n        }\n    }\n\n    /**\n     * Destroys the EventHub\n     *\n     * @public\n     * @returns {void}\n     */\n\n    destroy() {\n        $(window).off('gl_child_event', this._boundOnEventFromChild);\n    }\n}\n","\n\nexport default class BubblingEvent {\n    constructor(name, origin) {\n        this.name = name;\n        this.origin = origin;\n        this.isPropagationStopped = false;\n    }\n\n    stopPropagation() {\n        this.isPropagationStopped = true;\n    }\n}\n","\n\nexport default class ConfigurationError extends Error {\n    constructor(message, node) {\n        super();\n\n        this.name = 'Configuration Error';\n        this.message = message;\n        this.node = node;\n    }\n}\n","const itemDefaultConfig = {\n    isClosable: true,\n    reorderEnabled: true,\n    title: ''\n}\n\nexport default itemDefaultConfig\n","import EventEmitter from '../utils/EventEmitter'\nimport { \n  ALL_EVENT\n} from '../utils/EventEmitter'\n\nimport BubblingEvent from '../utils/BubblingEvent'\nimport Root from './Root'\nimport ConfigurationError from '../errors/ConfigurationError'\nimport itemDefaultConfig from '../config/ItemDefaultConfig'\n\nimport {\n    fnBind,\n    animFrame,\n    indexOf\n} from '../utils/utils'\n\n/**\n * This is the baseclass that all content items inherit from.\n * Most methods provide a subset of what the sub-classes do.\n *\n * It also provides a number of functions for tree traversal\n *\n * @param {lm.LayoutManager} layoutManager\n * @param {item node configuration} config\n * @param {lm.item} parent\n *\n * @event stateChanged\n * @event beforeItemDestroyed\n * @event itemDestroyed\n * @event itemCreated\n * @event componentCreated\n * @event rowCreated\n * @event columnCreated\n * @event stackCreated\n *\n * @constructor\n */\n\n\nexport default class AbstractContentItem extends EventEmitter {\n    constructor(layoutManager, config, parent) {\n\n        super();\n\n        this.config = this._extendItemNode(config);\n        this.type = config.type;\n        this.contentItems = [];\n        this.parent = parent;\n\n        this.isInitialised = false;\n        this.isMaximised = false;\n        this.isRoot = false;\n        this.isRow = false;\n        this.isColumn = false;\n        this.isStack = false;\n        this.isComponent = false;\n\n        this.layoutManager = layoutManager;\n        this._pendingEventPropagations = {};\n        this._throttledEvents = ['stateChanged'];\n\n        this.on(ALL_EVENT, this._propagateEvent, this);\n\n        if (config.content) {\n            this._createContentItems(config);\n        }\n    }\n\n    /**\n     * Set the size of the component and its children, called recursively\n     *\n     * @abstract\n     * @returns void\n     */\n    setSize() {\n        throw new Error('Abstract Method');\n    }\n\n    /**\n     * Calls a method recursively downwards on the tree\n     *\n     * @param   {String} functionName      the name of the function to be called\n     * @param   {[Array]}functionArguments optional arguments that are passed to every function\n     * @param   {[bool]} bottomUp          Call methods from bottom to top, defaults to false\n     * @param   {[bool]} skipSelf          Don't invoke the method on the class that calls it, defaults to false\n     *\n     * @returns {void}\n     */\n    callDownwards(functionName, functionArguments, bottomUp, skipSelf) {\n        var i;\n\n        if (bottomUp !== true && skipSelf !== true) {\n            this[functionName].apply(this, functionArguments || []);\n        }\n        for (i = 0; i < this.contentItems.length; i++) {\n            this.contentItems[i].callDownwards(functionName, functionArguments, bottomUp);\n        }\n        if (bottomUp === true && skipSelf !== true) {\n            this[functionName].apply(this, functionArguments || []);\n        }\n    }\n\n    /**\n     * Removes a child node (and its children) from the tree\n     *\n     * @param   {ContentItem} contentItem\n     *\n     * @returns {void}\n     */\n    removeChild(contentItem, keepChild) {\n        /*\n         * Get the position of the item that's to be removed within all content items this node contains\n         */\n        var index = indexOf(contentItem, this.contentItems);\n\n        /*\n         * Make sure the content item to be removed is actually a child of this item\n         */\n        if (index === -1) {\n            throw new Error('Can\\'t remove child item. Unknown content item');\n        }\n\n        /**\n\t\t * Call ._$destroy on the content item. \n\t\t * Then use 'callDownwards' to destroy any children\n\t\t */\n        if (keepChild !== true) {\n\t\t\tthis.contentItems[index]._$destroy();\n\t\t\tthis.contentItems[index].callDownwards('_$destroy', [], true, true);\n        }\n\n        /**\n         * Remove the content item from this nodes array of children\n         */\n        this.contentItems.splice(index, 1);\n\n        /**\n         * Remove the item from the configuration\n         */\n        this.config.content.splice(index, 1);\n\n        /**\n         * If this node still contains other content items, adjust their size\n         */\n        if (this.contentItems.length > 0) {\n            this.callDownwards('setSize');\n\n            /**\n             * If this was the last content item, remove this node as well\n             */\n        } else if (!(this instanceof Root) && this.config.isClosable === true) {\n            this.parent.removeChild(this);\n        }\n    }\n\n    /**\n     * Hides a child node (and its children) from the tree reclaiming its space in the layout\n     *\n     * @param   {ContentItem} contentItem\n     *\n     * @returns {void}\n     */\n    undisplayChild(contentItem) {\n        /*\n         * Get the position of the item that's to be removed within all content items this node contains\n         */\n        var index = indexOf(contentItem, this.contentItems);\n\n        /*\n         * Make sure the content item to be removed is actually a child of this item\n         */\n        if (index === -1) {\n            throw new Error('Can\\'t remove child item. Unknown content item');\n        }\n\n        if (!(this instanceof Root) && this.config.isClosable === true) {\n            this.parent.undisplayChild(this);\n        }\n    }\n\n    /**\n     * Sets up the tree structure for the newly added child\n     * The responsibility for the actual DOM manipulations lies\n     * with the concrete item\n     *\n     * @param {AbstractContentItem} contentItem\n     * @param {[Int]} index If omitted item will be appended\n     */\n    addChild(contentItem, index) {\n        if (index === undefined) {\n            index = this.contentItems.length;\n        }\n\n        this.contentItems.splice(index, 0, contentItem);\n\n        if (this.config.content === undefined) {\n            this.config.content = [];\n        }\n\n        this.config.content.splice(index, 0, contentItem.config);\n        contentItem.parent = this;\n\n        if (contentItem.parent.isInitialised === true && contentItem.isInitialised === false) {\n            contentItem._$init();\n        }\n    }\n\n    /**\n     * Replaces oldChild with newChild. This used to use jQuery.replaceWith... which for\n     * some reason removes all event listeners, so isn't really an option.\n     *\n     * @param   {AbstractContentItem} oldChild\n     * @param   {AbstractContentItem} newChild\n     *\n     * @returns {void}\n     */\n    replaceChild(oldChild, newChild, _$destroyOldChild) {\n\n        newChild = this.layoutManager._$normalizeContentItem(newChild);\n\n        var index = indexOf(oldChild, this.contentItems),\n            parentNode = oldChild.element[0].parentNode;\n\n        if (index === -1) {\n            throw new Error('Can\\'t replace child. oldChild is not child of this');\n        }\n\n        parentNode.replaceChild(newChild.element[0], oldChild.element[0]);\n\n        /*\n         * Optionally destroy the old content item\n         */\n        if (_$destroyOldChild === true) {\n            oldChild.parent = null;\n            oldChild._$destroy();\n        }\n\n        /*\n         * Wire the new contentItem into the tree\n         */\n        this.contentItems[index] = newChild;\n        newChild.parent = this;\n\n        /*\n         * Update tab reference\n         */\n        if (this.isStack) {\n            this.header.tabs[index].contentItem = newChild;\n        }\n\n        //TODO This doesn't update the config... refactor to leave item nodes untouched after creation\n        if (newChild.parent.isInitialised === true && newChild.isInitialised === false) {\n            newChild._$init();\n        }\n\n        this.callDownwards('setSize');\n    }\n\n    /**\n     * Convenience method.\n     * Shorthand for this.parent.removeChild( this )\n     *\n     * @returns {void}\n     */\n    remove() {\n        this.parent.removeChild(this);\n    }\n\n    /**\n     * Removes the component from the layout and creates a new\n     * browser window with the component and its children inside\n     *\n     * @returns {BrowserPopout}\n     */\n    popout() {\n        var browserPopout = this.layoutManager.createPopout(this);\n        this.emitBubblingEvent('stateChanged');\n        return browserPopout;\n    }\n\n    /**\n     * Maximises the Item or minimises it if it is already maximised\n     *\n     * @returns {void}\n     */\n    toggleMaximise(e) {\n        e && e.preventDefault();\n        if (this.isMaximised === true) {\n            this.layoutManager._$minimiseItem(this);\n        } else {\n            this.layoutManager._$maximiseItem(this);\n        }\n\n        this.isMaximised = !this.isMaximised;\n        this.emitBubblingEvent('stateChanged');\n    }\n\n    /**\n     * Selects the item if it is not already selected\n     *\n     * @returns {void}\n     */\n    select() {\n        if (this.layoutManager.selectedItem !== this) {\n            this.layoutManager.selectItem(this, true);\n            this.element.addClass('lm_selected');\n        }\n    }\n\n    /**\n     * De-selects the item if it is selected\n     *\n     * @returns {void}\n     */\n    deselect() {\n        if (this.layoutManager.selectedItem === this) {\n            this.layoutManager.selectedItem = null;\n            this.element.removeClass('lm_selected');\n        }\n    }\n\n    /**\n     * Set this component's title\n     *\n     * @public\n     * @param {String} title\n     *\n     * @returns {void}\n     */\n    setTitle(title) {\n        this.config.title = title;\n        this.emit('titleChanged', title);\n        this.emit('stateChanged');\n    }\n\n    /**\n     * Checks whether a provided id is present\n     *\n     * @public\n     * @param   {String}  id\n     *\n     * @returns {Boolean} isPresent\n     */\n    hasId(id) {\n        if (!this.config.id) {\n            return false;\n        } else if (typeof this.config.id === 'string') {\n            return this.config.id === id;\n        } else if (this.config.id instanceof Array) {\n            return indexOf(id, this.config.id) !== -1;\n        }\n    }\n\n    /**\n     * Adds an id. Adds it as a string if the component doesn't\n     * have an id yet or creates/uses an array\n     *\n     * @public\n     * @param {String} id\n     *\n     * @returns {void}\n     */\n    addId(id) {\n        if (this.hasId(id)) {\n            return;\n        }\n\n        if (!this.config.id) {\n            this.config.id = id;\n        } else if (typeof this.config.id === 'string') {\n            this.config.id = [this.config.id, id];\n        } else if (this.config.id instanceof Array) {\n            this.config.id.push(id);\n        }\n    }\n\n    /**\n     * Removes an existing id. Throws an error\n     * if the id is not present\n     *\n     * @public\n     * @param   {String} id\n     *\n     * @returns {void}\n     */\n    removeId(id) {\n        if (!this.hasId(id)) {\n            throw new Error('Id not found');\n        }\n\n        if (typeof this.config.id === 'string') {\n            delete this.config.id;\n        } else if (this.config.id instanceof Array) {\n            var index = indexOf(id, this.config.id);\n            this.config.id.splice(index, 1);\n        }\n    }\n\n    /****************************************\n     * SELECTOR\n     ****************************************/\n    getItemsByFilter(filter) {\n        var result = [],\n            next = function(contentItem) {\n                for (var i = 0; i < contentItem.contentItems.length; i++) {\n\n                    if (filter(contentItem.contentItems[i]) === true) {\n                        result.push(contentItem.contentItems[i]);\n                    }\n\n                    next(contentItem.contentItems[i]);\n                }\n            };\n\n        next(this);\n        return result;\n    }\n\n    getItemsById(id) {\n        return this.getItemsByFilter(function(item) {\n            if (item.config.id instanceof Array) {\n                return indexOf(id, item.config.id) !== -1;\n            } else {\n                return item.config.id === id;\n            }\n        });\n    }\n\n    getItemsByType(type) {\n        return this._$getItemsByProperty('type', type);\n    }\n\n    getComponentsByName(componentName) {\n        var components = this._$getItemsByProperty('componentName', componentName),\n            instances = [],\n            i;\n\n        for (i = 0; i < components.length; i++) {\n            instances.push(components[i].instance);\n        }\n\n        return instances;\n    }\n\n    /****************************************\n     * PACKAGE PRIVATE\n     ****************************************/\n    _$getItemsByProperty(key, value) {\n        return this.getItemsByFilter(function(item) {\n            return item[key] === value;\n        });\n    }\n\n    _$setParent(parent) {\n        this.parent = parent;\n    }\n\n    _$highlightDropZone(x, y, area) {\n        this.layoutManager.dropTargetIndicator.highlightArea(area);\n    }\n\n    _$onDrop(contentItem) {\n        this.addChild(contentItem);\n    }\n\n    _$hide() {\n        this._callOnActiveComponents('hide');\n        this.element.hide();\n        this.layoutManager.updateSize();\n    }\n\n    _$show() {\n        this._callOnActiveComponents('show');\n        this.element.show();\n        this.layoutManager.updateSize();\n    }\n\n    _callOnActiveComponents(methodName) {\n        var stacks = this.getItemsByType('stack'),\n            activeContentItem,\n            i;\n\n        for (i = 0; i < stacks.length; i++) {\n            activeContentItem = stacks[i].getActiveContentItem();\n\n            if (activeContentItem && activeContentItem.isComponent) {\n                activeContentItem.container[methodName]();\n            }\n        }\n    }\n\n    /**\n     * Destroys this item ands its children\n     *\n     * @returns {void}\n     */\n    _$destroy() {\n        this.emitBubblingEvent('beforeItemDestroyed');\n        this.element.remove();\n        this.emitBubblingEvent('itemDestroyed');\n    }\n\n    /**\n     * Returns the area the component currently occupies in the format\n     *\n     * {\n     *\t\tx1: int\n     *\t\txy: int\n     *\t\ty1: int\n     *\t\ty2: int\n     *\t\tcontentItem: contentItem\n     * }\n     */\n    _$getArea(element) {\n        element = element || this.element;\n\n        var offset = element.offset(),\n            width = element.width(),\n            height = element.height();\n\n        return {\n            x1: offset.left,\n            y1: offset.top,\n            x2: offset.left + width,\n            y2: offset.top + height,\n            surface: width * height,\n            contentItem: this\n        };\n    }\n\n    /**\n     * The tree of content items is created in two steps: First all content items are instantiated,\n     * then init is called recursively from top to bottem. This is the basic init function,\n     * it can be used, extended or overwritten by the content items\n     *\n     * Its behaviour depends on the content item\n     *\n     * @package private\n     *\n     * @returns {void}\n     */\n    _$init() {\n        var i;\n        this.setSize();\n\n        for (i = 0; i < this.contentItems.length; i++) {\n            this.childElementContainer.append(this.contentItems[i].element);\n        }\n\n        this.isInitialised = true;\n        this.emitBubblingEvent('itemCreated');\n        this.emitBubblingEvent(this.type + 'Created');\n    }\n\n    /**\n     * Emit an event that bubbles up the item tree.\n     *\n     * @param   {String} name The name of the event\n     *\n     * @returns {void}\n     */\n    emitBubblingEvent(name) {\n        var event = new BubblingEvent(name, this);\n        this.emit(name, event);\n    }\n\n    /**\n     * Private method, creates all content items for this node at initialisation time\n     * PLEASE NOTE, please see addChild for adding contentItems add runtime\n     * @private\n     * @param   {configuration item node} config\n     *\n     * @returns {void}\n     */\n    _createContentItems(config) {\n        var oContentItem, i;\n\n        if (!(config.content instanceof Array)) {\n            throw new ConfigurationError('content must be an Array', config);\n        }\n\n        for (i = 0; i < config.content.length; i++) {\n            oContentItem = this.layoutManager.createContentItem(config.content[i], this);\n            this.contentItems.push(oContentItem);\n        }\n    }\n\n    /**\n     * Extends an item configuration node with default settings\n     * @private\n     * @param   {configuration item node} config\n     *\n     * @returns {configuration item node} extended config\n     */\n    _extendItemNode(config) {\n\n        for (var key in itemDefaultConfig) {\n            if (config[key] === undefined) {\n                config[key] = itemDefaultConfig[key];\n            }\n        }\n\n        return config;\n    }\n\n    /**\n     * Called for every event on the item tree. Decides whether the event is a bubbling\n     * event and propagates it to its parent\n     *\n     * @param    {String} name the name of the event\n     * @param   {BubblingEvent} event\n     *\n     * @returns {void}\n     */\n    _propagateEvent(name, event) {\n        if (event instanceof BubblingEvent &&\n            event.isPropagationStopped === false &&\n            this.isInitialised === true) {\n\n            /**\n             * In some cases (e.g. if an element is created from a DragSource) it\n             * doesn't have a parent and is not below root. If that's the case\n             * propagate the bubbling event from the top level of the substree directly\n             * to the layoutManager\n             */\n            if (this.isRoot === false && this.parent) {\n                this.parent.emit.apply(this.parent, Array.prototype.slice.call(arguments, 0));\n            } else {\n                this._scheduleEventPropagationToLayoutManager(name, event);\n            }\n        }\n    }\n\n    /**\n     * All raw events bubble up to the root element. Some events that\n     * are propagated to - and emitted by - the layoutManager however are\n     * only string-based, batched and sanitized to make them more usable\n     *\n     * @param {String} name the name of the event\n     *\n     * @private\n     * @returns {void}\n     */\n    _scheduleEventPropagationToLayoutManager(name, event) {\n        if (indexOf(name, this._throttledEvents) === -1) {\n            this.layoutManager.emit(name, event.origin);\n        } else {\n            if (this._pendingEventPropagations[name] !== true) {\n                this._pendingEventPropagations[name] = true;\n                animFrame(fnBind(this._propagateEventToLayoutManager, this, [name, event]));\n            }\n        }\n\n    }\n\n    /**\n     * Callback for events scheduled by _scheduleEventPropagationToLayoutManager\n     *\n     * @param {String} name the name of the event\n     *\n     * @private\n     * @returns {void}\n     */\n    _propagateEventToLayoutManager(name, event) {\n        this._pendingEventPropagations[name] = false;\n        this.layoutManager.emit(name, event);\n    }\n}\n","import EventEmitter from '../utils/EventEmitter'\nimport {\n    fnBind, \n    getTouchEvent\n} from '../utils/utils'\nimport $ from 'jquery'\n\nexport default class DragListener extends EventEmitter {\n    constructor(eElement, nButtonCode) {\n\n        super();\n\n        this._timeout = null\n\n\n        this._eElement = $(eElement);\n        this._oDocument = $(document);\n        this._eBody = $(document.body);\n        this._nButtonCode = nButtonCode || 0;\n\n        /**\n         * The delay after which to start the drag in milliseconds\n         */\n        this._nDelay = 200;\n\n        /**\n         * The distance the mouse needs to be moved to qualify as a drag\n         */\n        this._nDistance = 10; //TODO - works better with delay only\n\n        this._nX = 0;\n        this._nY = 0;\n\n        this._nOriginalX = 0;\n        this._nOriginalY = 0;\n\n        this._bDragging = false;\n\n        this._fMove = fnBind(this.onMouseMove, this);\n        this._fUp = fnBind(this.onMouseUp, this);\n        this._fDown = fnBind(this.onMouseDown, this);\n\n\n        this._eElement.on('mousedown touchstart', this._fDown);\n    }\n\n    destroy() {\n        this._eElement.unbind('mousedown touchstart', this._fDown);\n        this._oDocument.unbind('mouseup touchend', this._fUp);\n        this._eElement = null;\n        this._oDocument = null;\n        this._eBody = null;\n    }\n\n    onMouseDown(oEvent) {\n        oEvent.preventDefault();\n\n        if (oEvent.button == 0 || oEvent.type === \"touchstart\") {\n            var coordinates = this._getCoordinates(oEvent);\n\n            this._nOriginalX = coordinates.x;\n            this._nOriginalY = coordinates.y;\n\n            this._oDocument.on('mousemove touchmove', this._fMove);\n            this._oDocument.one('mouseup touchend', this._fUp);\n\n            this._timeout = setTimeout(fnBind(this._startDrag, this), this._nDelay);\n        }\n    }\n\n    onMouseMove(oEvent) {\n        if (this._timeout != null) {\n            oEvent.preventDefault();\n\n            var coordinates = this._getCoordinates(oEvent);\n\n            this._nX = coordinates.x - this._nOriginalX;\n            this._nY = coordinates.y - this._nOriginalY;\n\n            if (this._bDragging === false) {\n                if (\n                    Math.abs(this._nX) > this._nDistance ||\n                    Math.abs(this._nY) > this._nDistance\n                ) {\n                    clearTimeout(this._timeout);\n                    this._startDrag();\n                }\n            }\n\n            if (this._bDragging) {\n                this.emit('drag', this._nX, this._nY, oEvent);\n            }\n        }\n    }\n\n    onMouseUp(oEvent) {\n        if (this._timeout != null) {\n            clearTimeout(this._timeout);\n            this._eBody.removeClass('lm_dragging');\n            this._eElement.removeClass('lm_dragging');\n            this._oDocument.find('iframe').css('pointer-events', '');\n            this._oDocument.unbind('mousemove touchmove', this._fMove);\n            this._oDocument.unbind('mouseup touchend', this._fUp);\n\n            if (this._bDragging === true) {\n                this._bDragging = false;\n                this.emit('dragStop', oEvent, this._nOriginalX + this._nX);\n            }\n        }\n    }\n\n    _startDrag() {\n        this._bDragging = true;\n        this._eBody.addClass('lm_dragging');\n        this._eElement.addClass('lm_dragging');\n        this._oDocument.find('iframe').css('pointer-events', 'none');\n        this.emit('dragStart', this._nOriginalX, this._nOriginalY);\n    }\n\n    _getCoordinates(event) {\n        event = getTouchEvent(event)\n        return {\n            x: event.pageX,\n            y: event.pageY\n        };\n    }\n}\n","import EventEmitter from '../utils/EventEmitter'\nimport {\n    stripTags,\n    getTouchEvent\n} from '../utils/utils';\nimport $ from 'jquery';\n\nconst _template = '<div class=\"lm_dragProxy\">' +\n    '<div class=\"lm_header\">' +\n    '<ul class=\"lm_tabs\">' +\n    '<li class=\"lm_tab lm_active\"><i class=\"lm_left\"></i>' +\n    '<span class=\"lm_title\"></span>' +\n    '<i class=\"lm_right\"></i></li>' +\n    '</ul>' +\n    '</div>' +\n    '<div class=\"lm_content\"></div>' +\n    '</div>';\n\n/**\n * This class creates a temporary container\n * for the component whilst it is being dragged\n * and handles drag events\n *\n * @constructor\n * @private\n *\n * @param {Number} x              The initial x position\n * @param {Number} y              The initial y position\n * @param {DragListener} dragListener\n * @param {lm.LayoutManager} layoutManager\n * @param {AbstractContentItem} contentItem\n * @param {AbstractContentItem} originalParent\n */\nexport default class DragProxy extends EventEmitter {\n\n    constructor(x, y, dragListener, layoutManager, contentItem, originalParent) {\n\n        super();\n\n        this._dragListener = dragListener;\n        this._layoutManager = layoutManager;\n        this._contentItem = contentItem;\n        this._originalParent = originalParent;\n\n        this._area = null;\n        this._lastValidArea = null;\n\n        this._dragListener.on('drag', this._onDrag, this);\n        this._dragListener.on('dragStop', this._onDrop, this);\n\n        this.element = $(_template);\n        if (originalParent && originalParent._side) {\n            this._sided = originalParent._sided;\n            this.element.addClass('lm_' + originalParent._side);\n            if (['right', 'bottom'].indexOf(originalParent._side) >= 0)\n                this.element.find('.lm_content').after(this.element.find('.lm_header'));\n        }\n        this.element.css({\n            left: x,\n            top: y\n        });\n        this.element.find('.lm_tab').attr('title', stripTags(this._contentItem.config.title));\n        this.element.find('.lm_title').html(this._contentItem.config.title);\n        this.childElementContainer = this.element.find('.lm_content');\n        this.childElementContainer.append(contentItem.element);\n\n        this._undisplayTree();\n        this._layoutManager._$calculateItemAreas();\n        this._setDimensions();\n\n        $(document.body).append(this.element);\n\n        var offset = this._layoutManager.container.offset();\n\n        this._minX = offset.left;\n        this._minY = offset.top;\n        this._maxX = this._layoutManager.container.width() + this._minX;\n        this._maxY = this._layoutManager.container.height() + this._minY;\n        this._width = this.element.width();\n        this._height = this.element.height();\n\n        this._setDropPosition(x, y);\n    }\n\n    /**\n     * Callback on every mouseMove event during a drag. Determines if the drag is\n     * still within the valid drag area and calls the layoutManager to highlight the\n     * current drop area\n     *\n     * @param   {Number} offsetX The difference from the original x position in px\n     * @param   {Number} offsetY The difference from the original y position in px\n     * @param   {jQuery DOM event} event\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _onDrag(offsetX, offsetY, event) {\n        event = getTouchEvent(event)\n\n        var x = event.pageX,\n            y = event.pageY,\n            isWithinContainer = x > this._minX && x < this._maxX && y > this._minY && y < this._maxY;\n\n        if (!isWithinContainer && this._layoutManager.config.settings.constrainDragToContainer === true) {\n            return;\n        }\n\n        this._setDropPosition(x, y);\n    }\n\n    /**\n     * Sets the target position, highlighting the appropriate area\n     *\n     * @param   {Number} x The x position in px\n     * @param   {Number} y The y position in px\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _setDropPosition(x, y) {\n        this.element.css({\n            left: x,\n            top: y\n        });\n        this._area = this._layoutManager._$getArea(x, y);\n\n        if (this._area !== null) {\n            this._lastValidArea = this._area;\n            this._area.contentItem._$highlightDropZone(x, y, this._area);\n        }\n    }\n\n    /**\n     * Callback when the drag has finished. Determines the drop area\n     * and adds the child to it\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _onDrop() {\n        this._updateTree()\n        this._layoutManager.dropTargetIndicator.hide();\n\n        /*\n         * Valid drop area found\n         */\n        if (this._area !== null) {\n            this._area.contentItem._$onDrop(this._contentItem, this._area);\n\n            /**\n             * No valid drop area available at present, but one has been found before.\n             * Use it\n             */\n        } else if (this._lastValidArea !== null) {\n            this._lastValidArea.contentItem._$onDrop(this._contentItem, this._lastValidArea);\n\n            /**\n             * No valid drop area found during the duration of the drag. Return\n             * content item to its original position if a original parent is provided.\n             * (Which is not the case if the drag had been initiated by createDragSource)\n             */\n        } else if (this._originalParent) {\n            this._originalParent.addChild(this._contentItem);\n\n            /**\n             * The drag didn't ultimately end up with adding the content item to\n             * any container. In order to ensure clean up happens, destroy the\n             * content item.\n             */\n        } else {\n            this._contentItem._$destroy();\n        }\n\n        this.element.remove();\n\n        this._layoutManager.emit('itemDropped', this._contentItem);\n    }\n\n    /**\n     * Undisplays the item from its original position within the tree\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _undisplayTree() {\n\n        /**\n         * parent is null if the drag had been initiated by a external drag source\n         */\n        if (this._contentItem.parent) {\n            this._contentItem.parent.undisplayChild(this._contentItem);\n        }\n    }\n\n    /**\n     * Removes the item from its original position within the tree\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _updateTree() {\n\n        /**\n         * parent is null if the drag had been initiated by a external drag source\n         */\n        if (this._contentItem.parent) {\n            this._contentItem.parent.removeChild(this._contentItem, true);\n        }\n\n        this._contentItem._$setParent(this);\n    }\n\n    /**\n     * Updates the Drag Proxie's dimensions\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _setDimensions() {\n        var dimensions = this._layoutManager.config.dimensions,\n            width = dimensions.dragProxyWidth,\n            height = dimensions.dragProxyHeight;\n\n        this.element.width(width);\n        this.element.height(height);\n        width -= (this._sided ? dimensions.headerHeight : 0);\n        height -= (!this._sided ? dimensions.headerHeight : 0);\n        this.childElementContainer.width(width);\n        this.childElementContainer.height(height);\n        this._contentItem.element.width(width);\n        this._contentItem.element.height(height);\n        this._contentItem.callDownwards('_$show');\n        this._contentItem.callDownwards('setSize');\n    }\n}\n","import DragListener from '../utils/DragListener'\nimport DragProxy from '../controls/DragProxy'\nimport {\n    fnBind,\n    stripTags\n} from '../utils/utils'\nimport $ from 'jquery'\n\n/**\n * Represents an individual tab within a Stack's header\n *\n * @param {Header} header\n * @param {AbstractContentItem} contentItem\n *\n * @constructor\n */\n\nconst _template = '<li class=\"lm_tab\"><i class=\"lm_left\"></i>' +\n        '<span class=\"lm_title\"></span><div class=\"lm_close_tab\"></div>' +\n        '<i class=\"lm_right\"></i></li>'\n\nexport default class Tab {\n\n    constructor(header, contentItem) {\n        this.header = header;\n        this.contentItem = contentItem;\n        this.element = $(_template);\n        this.titleElement = this.element.find('.lm_title');\n        this.closeElement = this.element.find('.lm_close_tab');\n        this.closeElement[contentItem.config.isClosable ? 'show' : 'hide']();\n        this.isActive = false;\n\n        this.setTitle(contentItem.config.title);\n        this.contentItem.on('titleChanged', this.setTitle, this);\n\n        this._layoutManager = this.contentItem.layoutManager;\n\n        if (\n            this._layoutManager.config.settings.reorderEnabled === true &&\n            contentItem.config.reorderEnabled === true\n        ) {\n            this._dragListener = new DragListener(this.element);\n            this._dragListener.on('dragStart', this._onDragStart, this);\n            this.contentItem.on('destroy', this._dragListener.destroy, this._dragListener);\n        }\n\n        this._onTabClickFn = fnBind(this._onTabClick, this);\n        this._onCloseClickFn = fnBind(this._onCloseClick, this);\n\n        this.element.on('mousedown touchstart', this._onTabClickFn);\n\n        if (this.contentItem.config.isClosable) {\n            this.closeElement.on('click touchstart', this._onCloseClickFn);\n            this.closeElement.on('mousedown', this._onCloseMousedown);\n        } else {\n            this.closeElement.remove();\n        }\n\n        this.contentItem.tab = this;\n        this.contentItem.emit('tab', this);\n        this.contentItem.layoutManager.emit('tabCreated', this);\n\n        if (this.contentItem.isComponent) {\n            this.contentItem.container.tab = this;\n            this.contentItem.container.emit('tab', this);\n        }\n    }\n\n\n    /**\n     * Sets the tab's title to the provided string and sets\n     * its title attribute to a pure text representation (without\n     * html tags) of the same string.\n     *\n     * @public\n     * @param {String} title can contain html\n     */\n    setTitle(title) {\n        this.element.attr('title', stripTags(title));\n        this.titleElement.html(title);\n    }\n\n    /**\n     * Sets this tab's active state. To programmatically\n     * switch tabs, use header.setActiveContentItem( item ) instead.\n     *\n     * @public\n     * @param {Boolean} isActive\n     */\n    setActive(isActive) {\n        if (isActive === this.isActive) {\n            return;\n        }\n        this.isActive = isActive;\n\n        if (isActive) {\n            this.element.addClass('lm_active');\n        } else {\n            this.element.removeClass('lm_active');\n        }\n    }\n\n    /**\n     * Destroys the tab\n     *\n     * @private\n     * @returns {void}\n     */\n    _$destroy() {\n        this.element.off('mousedown touchstart', this._onTabClickFn);\n        this.closeElement.off('click touchstart', this._onCloseClickFn);\n        if (this._dragListener) {\n            this.contentItem.off('destroy', this._dragListener.destroy, this._dragListener);\n            this._dragListener.off('dragStart', this._onDragStart);\n            this._dragListener = null;\n        }\n        this.element.remove();\n    }\n\n    /**\n     * Callback for the DragListener\n     *\n     * @param   {Number} x The tabs absolute x position\n     * @param   {Number} y The tabs absolute y position\n     *\n     * @private\n     * @returns {void}\n     */\n    _onDragStart(x, y) {\n        if (!this.header._canDestroy)\n            return null;\n        if (this.contentItem.parent.isMaximised === true) {\n            this.contentItem.parent.toggleMaximise();\n        }\n        new DragProxy(\n            x,\n            y,\n            this._dragListener,\n            this._layoutManager,\n            this.contentItem,\n            this.header.parent\n        );\n    }\n\n    /**\n     * Callback when the tab is clicked\n     *\n     * @param {jQuery DOM event} event\n     *\n     * @private\n     * @returns {void}\n     */\n    _onTabClick(event) {\n        // left mouse button or tap\n        if (event.button === 0 || event.type === 'touchstart') {\n            this.header.parent.setActiveContentItem( this.contentItem );\n\n            // middle mouse button\n        } else if (event.button === 1 && this.contentItem.config.isClosable) {\n            this._onCloseClick(event);\n        }\n    }\n\n    /**\n     * Callback when the tab's close button is\n     * clicked\n     *\n     * @param   {jQuery DOM event} event\n     *\n     * @private\n     * @returns {void}\n     */\n    _onCloseClick(event) {\n        event.stopPropagation();\n        if (!this.header._canDestroy)\n            return;\n        this.header.parent.removeChild(this.contentItem);\n    }\n\n    /**\n     * Callback to capture tab close button mousedown\n     * to prevent tab from activating.\n     *\n     * @param (jQuery DOM event) event\n     *\n     * @private\n     * @returns {void}\n     */\n    _onCloseMousedown(event) {\n        event.stopPropagation();\n    }\n}\n","import $ from 'jquery';\n\nexport default class HeaderButton {\n    constructor(header, label, cssClass, action) {\n        this._header = header;\n        this.element = $('<li class=\"' + cssClass + '\" title=\"' + label + '\"></li>');\n        this._header.on('destroy', this._$destroy, this);\n        this._action = action;\n        this.element.on('click touchstart', this._action);\n        this._header.controlsContainer.append(this.element);\n    }\n\n    _$destroy() {\n        this.element.off();\n        this.element.remove();\n    }\n}\n","import EventEmitter from '../utils/EventEmitter'\nimport Tab from '../controls/Tab'\nimport HeaderButton from '../controls/HeaderButton'\nimport {\n    fnBind\n} from '../utils/utils';\nimport $ from 'jquery';\n\nconst _template = [\n        '<div class=\"lm_header\">',\n        '<ul class=\"lm_tabs\"></ul>',\n        '<ul class=\"lm_controls\"></ul>',\n        '<ul class=\"lm_tabdropdown_list\"></ul>',\n        '</div>'\n    ].join('');\n\n/**\n * This class represents a header above a Stack ContentItem.\n *\n * @param {lm.LayoutManager} layoutManager\n * @param {AbstractContentItem} parent\n */\nexport default class Header extends EventEmitter {\n\n    constructor(layoutManager, parent) {\n\n        super();\n        \n        this.layoutManager = layoutManager;\n        this.element = $(_template);\n\n        if (this.layoutManager.config.settings.selectionEnabled === true) {\n            this.element.addClass('lm_selectable');\n            this.element.on('click touchstart', fnBind(this._onHeaderClick, this));\n        }\n\n        this.tabsContainer = this.element.find('.lm_tabs');\n        this.tabDropdownContainer = this.element.find('.lm_tabdropdown_list');\n        this.tabDropdownContainer.hide();\n        this.controlsContainer = this.element.find('.lm_controls');\n        this.parent = parent;\n        this.parent.on('resize', this._updateTabSizes, this);\n        this.tabs = [];\n        this.tabsMarkedForRemoval = [];\n        this.activeContentItem = null;\n        this.closeButton = null;\n        this.dockButton = null;\n        this.tabDropdownButton = null;\n        this.hideAdditionalTabsDropdown = fnBind(this._hideAdditionalTabsDropdown, this);\n        $(document).mouseup(this.hideAdditionalTabsDropdown);\n\n        this._lastVisibleTabIndex = -1;\n        this._tabControlOffset = this.layoutManager.config.settings.tabControlOffset;\n        this._createControls();\n    }\n\n    /**\n     * Creates a new tab and associates it with a contentItem\n     *\n     * @param    {AbstractContentItem} contentItem\n     * @param    {Integer} index The position of the tab\n     *\n     * @returns {void}\n     */\n    createTab(contentItem, index) {\n        var tab, i;\n\n        //If there's already a tab relating to the\n        //content item, don't do anything\n        for (i = 0; i < this.tabs.length; i++) {\n            if (this.tabs[i].contentItem === contentItem) {\n                return;\n            }\n        }\n\n        tab = new Tab(this, contentItem);\n\n        if (this.tabs.length === 0) {\n            this.tabs.push(tab);\n            this.tabsContainer.append(tab.element);\n            return;\n        }\n\n        if (index === undefined) {\n            index = this.tabs.length;\n        }\n\n        if (index > 0) {\n            this.tabs[index - 1].element.after(tab.element);\n        } else {\n            this.tabs[0].element.before(tab.element);\n        }\n\n        this.tabs.splice(index, 0, tab);\n        this._updateTabSizes();\n    }\n\n    /**\n     * Finds a tab based on the contentItem its associated with and removes it.\n     *\n     * @param    {AbstractContentItem} contentItem\n     *\n     * @returns {void}\n     */\n    removeTab(contentItem) {\n        for (var i = 0; i < this.tabs.length; i++) {\n            if (this.tabs[i].contentItem === contentItem) {\n                this.tabs[i]._$destroy();\n                this.tabs.splice(i, 1);\n                return;\n            }\n        }\n\n        for (i = 0; i < this.tabsMarkedForRemoval.length; i++) {\n            if (this.tabsMarkedForRemoval[i].contentItem === contentItem) {\n                this.tabsMarkedForRemoval[i]._$destroy();\n                this.tabsMarkedForRemoval.splice(i, 1);\n                return;\n            }\n        }\n\n\n        throw new Error('contentItem is not controlled by this header');\n    }\n\n    /**\n     * Finds a tab based on the contentItem its associated with and marks it\n     * for removal, hiding it too.\n     *\n     * @param    {AbstractContentItem} contentItem\n     *\n     * @returns {void}\n     */\n    hideTab(contentItem){\n        for (var i = 0; i < this.tabs.length; i++) {\n            if (this.tabs[i].contentItem === contentItem) {\n                this.tabs[i].element.hide()\n                this.tabsMarkedForRemoval.push(this.tabs[i])\n                this.tabs.splice(i, 1);\n                return;\n            }\n        }        \n\n        throw new Error('contentItem is not controlled by this header');\n    }\n\n    /**\n     * The programmatical equivalent of clicking a Tab.\n     *\n     * @param {AbstractContentItem} contentItem\n     */\n    setActiveContentItem(contentItem) {\n        var i, j, isActive, activeTab;\n\n        if (this.activeContentItem === contentItem) return;\n\n        for (i = 0; i < this.tabs.length; i++) {\n            isActive = this.tabs[i].contentItem === contentItem;\n            this.tabs[i].setActive(isActive);\n            if (isActive === true) {\n                this.activeContentItem = contentItem;\n                this.parent.config.activeItemIndex = i;\n            }\n        }\n\n        if (this.layoutManager.config.settings.reorderOnTabMenuClick) {\n            /**\n             * If the tab selected was in the dropdown, move everything down one to make way for this one to be the first.\n             * This will make sure the most used tabs stay visible.\n             */\n            if (this._lastVisibleTabIndex !== -1 && this.parent.config.activeItemIndex > this._lastVisibleTabIndex) {\n                activeTab = this.tabs[this.parent.config.activeItemIndex];\n                for (j = this.parent.config.activeItemIndex; j > 0; j--) {\n                    this.tabs[j] = this.tabs[j - 1];\n                }\n                this.tabs[0] = activeTab;\n                this.parent.config.activeItemIndex = 0;\n            }\n        }\n\n        this._updateTabSizes();\n        this.parent.emitBubblingEvent('stateChanged');\n    }\n\n    /**\n     * Programmatically operate with header position.\n     *\n     * @param {string} position one of ('top','left','right','bottom') to set or empty to get it.\n     *\n     * @returns {string} previous header position\n     */\n    position(position) {\n        var previous = this.parent._header.show;\n        if (this.parent._docker && this.parent._docker.docked)\n            throw new Error('Can\\'t change header position in docked stack');\n        if (previous && !this.parent._side)\n            previous = 'top';\n        if (position !== undefined && this.parent._header.show != position) {\n            this.parent._header.show = position;\n            this.parent.config.header ? this.parent.config.header.show = position : this.parent.config.header = { show: position };\n            this.parent._setupHeaderPosition();\n        }\n        return previous;\n    }\n\n    /**\n     * Programmatically set closability.\n     *\n     * @package private\n     * @param {Boolean} isClosable Whether to enable/disable closability.\n     *\n     * @returns {Boolean} Whether the action was successful\n     */\n    _$setClosable(isClosable) {\n        this._canDestroy = isClosable || this.tabs.length > 1;\n        if (this.closeButton && this._isClosable()) {\n            this.closeButton.element[isClosable ? \"show\" : \"hide\"]();\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Programmatically set ability to dock.\n     *\n     * @package private\n     * @param {Boolean} isDockable Whether to enable/disable ability to dock.\n     *\n     * @returns {Boolean} Whether the action was successful\n     */\n    _setDockable(isDockable) {\n        if (this.dockButton && this.parent._header && this.parent._header.dock) {\n            this.dockButton.element.toggle(!!isDockable);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Destroys the entire header\n     *\n     * @package private\n     *\n     * @returns {void}\n     */\n    _$destroy() {\n        this.emit('destroy', this);\n\n        for (var i = 0; i < this.tabs.length; i++) {\n            this.tabs[i]._$destroy();\n        }\n        $(document).off('mouseup', this.hideAdditionalTabsDropdown);\n        this.element.remove();\n    }\n\n    /**\n     * get settings from header\n     *\n     * @returns {string} when exists\n     */\n    _getHeaderSetting(name) {\n        if (name in this.parent._header)\n            return this.parent._header[name];\n    }\n\n    /**\n     * Creates the popout, maximise and close buttons in the header's top right corner\n     *\n     * @returns {void}\n     */\n    _createControls() {\n        var closeStack,\n            popout,\n            label,\n            maximiseLabel,\n            minimiseLabel,\n            maximise,\n            maximiseButton,\n            tabDropdownLabel,\n            showTabDropdown;\n\n        /**\n         * Dropdown to show additional tabs.\n         */\n        showTabDropdown = fnBind(this._showAdditionalTabsDropdown, this);\n        tabDropdownLabel = this.layoutManager.config.labels.tabDropdown;\n        this.tabDropdownButton = new HeaderButton(this, tabDropdownLabel, 'lm_tabdropdown', showTabDropdown);\n        this.tabDropdownButton.element.hide();\n\n        if (this.parent._header && this.parent._header.dock) {\n            var button = fnBind(this.parent.dock, this.parent);\n            label = this._getHeaderSetting('dock');\n            this.dockButton = new HeaderButton(this, label, 'lm_dock', button);\n        }\n\n        /**\n         * Popout control to launch component in new window.\n         */\n        if (this._getHeaderSetting('popout')) {\n            popout = fnBind(this._onPopoutClick, this);\n            label = this._getHeaderSetting('popout');\n            new HeaderButton(this, label, 'lm_popout', popout);\n        }\n\n        /**\n         * Maximise control - set the component to the full size of the layout\n         */\n        if (this._getHeaderSetting('maximise')) {\n            maximise = fnBind(this.parent.toggleMaximise, this.parent);\n            maximiseLabel = this._getHeaderSetting('maximise');\n            minimiseLabel = this._getHeaderSetting('minimise');\n            maximiseButton = new HeaderButton(this, maximiseLabel, 'lm_maximise', maximise);\n\n            this.parent.on('maximised', function() {\n                maximiseButton.element.attr('title', minimiseLabel);\n            });\n\n            this.parent.on('minimised', function() {\n                maximiseButton.element.attr('title', maximiseLabel);\n            });\n        }\n\n        /**\n         * Close button\n         */\n        if (this._isClosable()) {\n            closeStack = fnBind(this.parent.remove, this.parent);\n            label = this._getHeaderSetting('close');\n            this.closeButton = new HeaderButton(this, label, 'lm_close', closeStack);\n        }\n    }\n\n    /**\n     * Shows drop down for additional tabs when there are too many to display.\n     *\n     * @returns {void}\n     */\n    _showAdditionalTabsDropdown() {\n        this.tabDropdownContainer.show();\n    }\n\n    /**\n     * Hides drop down for additional tabs when there are too many to display.\n     *\n     * @returns {void}\n     */\n    _hideAdditionalTabsDropdown(e) {\n        this.tabDropdownContainer.hide();\n    }\n\n    /**\n     * Checks whether the header is closable based on the parent config and\n     * the global config.\n     *\n     * @returns {Boolean} Whether the header is closable.\n     */\n    _isClosable() {\n        return this.parent.config.isClosable && this.layoutManager.config.settings.showCloseIcon;\n    }\n\n    _onPopoutClick() {\n        if (this.layoutManager.config.settings.popoutWholeStack === true) {\n            this.parent.popout();\n        } else {\n            this.activeContentItem.popout();\n        }\n    }\n\n    /**\n     * Invoked when the header's background is clicked (not it's tabs or controls)\n     *\n     * @param    {jQuery DOM event} event\n     *\n     * @returns {void}\n     */\n    _onHeaderClick(event) {\n        if (event.target === this.element[0]) {\n            this.parent.select();\n        }\n    }\n\n    /**\n     * Pushes the tabs to the tab dropdown if the available space is not sufficient\n     *\n     * @returns {void}\n     */\n    _updateTabSizes(showTabMenu) {\n        if (this.tabs.length === 0) {\n            return;\n        }\n\n        //Show the menu based on function argument\n        this.tabDropdownButton.element.toggle(showTabMenu === true);\n\n        var size = function(val) {\n            return val ? 'width' : 'height';\n        };\n        this.element.css(size(!this.parent._sided), '');\n        this.element[size(this.parent._sided)](this.layoutManager.config.dimensions.headerHeight);\n        var availableWidth = this.element.outerWidth() - this.controlsContainer.outerWidth() - this._tabControlOffset,\n            cumulativeTabWidth = 0,\n            visibleTabWidth = 0,\n            tabElement,\n            i,\n            j,\n            marginLeft,\n            overlap = 0,\n            tabWidth,\n            tabOverlapAllowance = this.layoutManager.config.settings.tabOverlapAllowance,\n            tabOverlapAllowanceExceeded = false,\n            activeIndex = (this.activeContentItem ? this.tabs.indexOf(this.activeContentItem.tab) : 0),\n            activeTab = this.tabs[activeIndex];\n        if (this.parent._sided)\n            availableWidth = this.element.outerHeight() - this.controlsContainer.outerHeight() - this._tabControlOffset;\n        this._lastVisibleTabIndex = -1;\n\n        for (i = 0; i < this.tabs.length; i++) {\n            tabElement = this.tabs[i].element;\n\n            //Put the tab in the tabContainer so its true width can be checked\n            this.tabsContainer.append(tabElement);\n            tabWidth = tabElement.outerWidth() + parseInt(tabElement.css('margin-right'), 10);\n\n            cumulativeTabWidth += tabWidth;\n\n            //Include the active tab's width if it isn't already\n            //This is to ensure there is room to show the active tab\n            if (activeIndex <= i) {\n                visibleTabWidth = cumulativeTabWidth;\n            } else {\n                visibleTabWidth = cumulativeTabWidth + activeTab.element.outerWidth() + parseInt(activeTab.element.css('margin-right'), 10);\n            }\n\n            // If the tabs won't fit, check the overlap allowance.\n            if (visibleTabWidth > availableWidth) {\n\n                //Once allowance is exceeded, all remaining tabs go to menu.\n                if (!tabOverlapAllowanceExceeded) {\n\n                    //No overlap for first tab or active tab\n                    //Overlap spreads among non-active, non-first tabs\n                    if (activeIndex > 0 && activeIndex <= i) {\n                        overlap = (visibleTabWidth - availableWidth) / (i - 1);\n                    } else {\n                        overlap = (visibleTabWidth - availableWidth) / i;\n                    }\n\n                    //Check overlap against allowance.\n                    if (overlap < tabOverlapAllowance) {\n                        for (j = 0; j <= i; j++) {\n                            marginLeft = (j !== activeIndex && j !== 0) ? '-' + overlap + 'px' : '';\n                            this.tabs[j].element.css({\n                                'z-index': i - j,\n                                'margin-left': marginLeft\n                            });\n                        }\n                        this._lastVisibleTabIndex = i;\n                        this.tabsContainer.append(tabElement);\n                    } else {\n                        tabOverlapAllowanceExceeded = true;\n                    }\n\n                } else if (i === activeIndex) {\n                    //Active tab should show even if allowance exceeded. (We left room.)\n                    tabElement.css({\n                        'z-index': 'auto',\n                        'margin-left': ''\n                    });\n                    this.tabsContainer.append(tabElement);\n                }\n\n                if (tabOverlapAllowanceExceeded && i !== activeIndex) {\n                    if (showTabMenu) {\n                        //Tab menu already shown, so we just add to it.\n                        tabElement.css({\n                            'z-index': 'auto',\n                            'margin-left': ''\n                        });\n                        this.tabDropdownContainer.append(tabElement);\n                    } else {\n                        //We now know the tab menu must be shown, so we have to recalculate everything.\n                        this._updateTabSizes(true);\n                        return;\n                    }\n                }\n\n            } else {\n                this._lastVisibleTabIndex = i;\n                tabElement.css({\n                    'z-index': 'auto',\n                    'margin-left': ''\n                });\n                this.tabsContainer.append(tabElement);\n            }\n        }\n\n    }\n}\n","import AbstractContentItem from \"../items/AbstractContentItem\";\nimport RowOrColumn from \"../items/RowOrColumn\";\nimport Header from \"../controls/Header\";\n\nimport { fnBind, copy, indexOf } from \"../utils/utils\";\nimport $ from \"jquery\";\n\nexport default class Stack extends AbstractContentItem {\n    constructor(layoutManager, config, parent) {\n        super(layoutManager, config, parent);\n\n        this.element = $('<div class=\"lm_item lm_stack\"></div>');\n        this._activeContentItem = null;\n        var cfg = layoutManager.config;\n        this._header = {\n            // defaults' reconstruction from old configuration style\n            show:\n                cfg.settings.hasHeaders === true && config.hasHeaders !== false,\n            popout: cfg.settings.showPopoutIcon && cfg.labels.popout,\n            maximise: cfg.settings.showMaximiseIcon && cfg.labels.maximise,\n            close: cfg.settings.showCloseIcon && cfg.labels.close,\n            minimise: cfg.labels.minimise,\n        };\n        if (cfg.header)\n            // load simplified version of header configuration (https://github.com/deepstreamIO/golden-layout/pull/245)\n            copy(this._header, cfg.header);\n        if (config.header)\n            // load from stack\n            copy(this._header, config.header);\n        if (config.content && config.content[0] && config.content[0].header)\n            // load from component if stack omitted\n            copy(this._header, config.content[0].header);\n\n        this._dropZones = {};\n        this._dropSegment = null;\n        this._contentAreaDimensions = null;\n        this._dropIndex = null;\n\n        this.isStack = true;\n\n        this.childElementContainer = $('<div class=\"lm_items\"></div>');\n        this.header = new Header(layoutManager, this);\n\n        this.element.on(\n            \"mouseleave mouseenter\",\n            fnBind(function (event) {\n                if (this._docker && this._docker.docked)\n                    this.childElementContainer[this._docker.dimension](\n                        event.type == \"mouseenter\" ? this._docker.realSize : 0\n                    );\n            }, this)\n        );\n        this.element.append(this.header.element);\n        this.element.append(this.childElementContainer);\n        this._setupHeaderPosition();\n        this._$validateClosability();\n    }\n\n    dock(mode) {\n        if (this._header.dock)\n            if (this.parent instanceof RowOrColumn)\n                this.parent.dock(this, mode);\n    }\n\n    setSize() {\n        if (this.element.css(\"display\") === \"none\") return;\n        var isDocked = this._docker && this._docker.docked,\n            content = {\n                width: this.element.width(),\n                height: this.element.height(),\n            };\n\n        if (this._header.show)\n            content[\n                this._sided ? \"width\" : \"height\"\n            ] -= this.layoutManager.config.dimensions.headerHeight;\n        if (isDocked) content[this._docker.dimension] = this._docker.realSize;\n        if (!isDocked || this._docker.dimension == \"height\")\n            this.childElementContainer.width(content.width);\n        if (!isDocked || this._docker.dimension == \"width\")\n            this.childElementContainer.height(content.height);\n\n        for (var i = 0; i < this.contentItems.length; i++) {\n            this.contentItems[i].element.width(content.width);\n            this.contentItems[i].element.height(content.height);\n        }\n        this.emit(\"resize\");\n        this.emitBubblingEvent(\"stateChanged\");\n    }\n\n    _$init() {\n        var i, initialItem;\n\n        if (this.isInitialised === true) return;\n\n        AbstractContentItem.prototype._$init.call(this);\n\n        for (i = 0; i < this.contentItems.length; i++) {\n            this.header.createTab(this.contentItems[i]);\n            this.contentItems[i]._$hide();\n        }\n\n        if (this.contentItems.length > 0) {\n            initialItem = this.contentItems[this.config.activeItemIndex || 0];\n\n            if (!initialItem) {\n                initialItem = this.contentItems[0]; //Default to index 0 if 'Configured activeItemIndex out of bounds'\n            }\n\n            this.setActiveContentItem(initialItem);\n        }\n        this._$validateClosability();\n        if (this.parent instanceof RowOrColumn) {\n            this.parent._validateDocking();\n        }\n    }\n\n    setActiveContentItem(contentItem) {\n        if (this._activeContentItem === contentItem) return;\n\n        if (indexOf(contentItem, this.contentItems) === -1) {\n            throw new Error(\"contentItem is not a child of this stack\");\n        }\n\n        if (this._activeContentItem !== null) {\n            this._activeContentItem._$hide();\n        }\n\n        this._activeContentItem = contentItem;\n        this.header.setActiveContentItem(contentItem);\n        contentItem._$show();\n        this.emit(\"activeContentItemChanged\", contentItem);\n        this.layoutManager.emit(\"activeContentItemChanged\", contentItem);\n        this.emitBubblingEvent(\"stateChanged\");\n    }\n\n    getActiveContentItem() {\n        return this.header.activeContentItem;\n    }\n\n    addChild(contentItem, index) {\n        if (index > this.contentItems.length) {\n            /*\n             * UGLY PATCH: PR #428, commit a4e84ec5 fixed a bug appearing on touchscreens during the drag of a panel.\n             * The bug was caused by the physical removal of the element on drag: partial documentation is at issue #425.\n             * The fix introduced the function undisplayChild() (called 'undisplay' to differentiate it from jQuery.hide),\n             * which doesn't remove the element but only hides it: that's why when a tab is dragged & dropped into its\n             * original container (at the end), the index here could be off by one.\n             */\n            index -= 1;\n        }\n        contentItem = this.layoutManager._$normalizeContentItem(\n            contentItem,\n            this\n        );\n        AbstractContentItem.prototype.addChild.call(this, contentItem, index);\n        this.childElementContainer.append(contentItem.element);\n        this.header.createTab(contentItem, index);\n        this.setActiveContentItem(contentItem);\n        this.callDownwards(\"setSize\");\n        this._$validateClosability();\n        if (this.parent instanceof RowOrColumn) this.parent._validateDocking();\n        this.emitBubblingEvent(\"stateChanged\");\n    }\n\n    removeChild(contentItem, keepChild) {\n        var index = indexOf(contentItem, this.contentItems);\n        AbstractContentItem.prototype.removeChild.call(\n            this,\n            contentItem,\n            keepChild\n        );\n        this.header.removeTab(contentItem);\n        if (this.header.activeContentItem === contentItem) {\n            if (this.contentItems.length > 0) {\n                this.setActiveContentItem(\n                    this.contentItems[Math.max(index - 1, 0)]\n                );\n            } else {\n                this._activeContentItem = null;\n            }\n        } else if (this.config.activeItemIndex >= this.contentItems.length) {\n            if (this.contentItems.length > 0) {\n                var activeIndex = indexOf(\n                    this.getActiveContentItem(),\n                    this.contentItems\n                );\n                this.config.activeItemIndex = Math.max(activeIndex, 0);\n            }\n        }\n\n        this._$validateClosability();\n        if (this.parent instanceof RowOrColumn) this.parent._validateDocking();\n        this.emitBubblingEvent(\"stateChanged\");\n    }\n\n    undisplayChild(contentItem) {\n        if (this.contentItems.length > 1) {\n            var index = indexOf(contentItem, this.contentItems);\n            contentItem._$hide && contentItem._$hide();\n            this.setActiveContentItem(\n                this.contentItems[index === 0 ? index + 1 : index - 1]\n            );\n        } else {\n            this.header.hideTab(contentItem);\n            contentItem._$hide && contentItem._$hide();\n            AbstractContentItem.prototype.undisplayChild.call(\n                this,\n                contentItem\n            );\n            if (this.parent instanceof RowOrColumn)\n                this.parent._validateDocking();\n        }\n        this.emitBubblingEvent(\"stateChanged\");\n    }\n\n    /**\n     * Validates that the stack is still closable or not. If a stack is able\n     * to close, but has a non closable component added to it, the stack is no\n     * longer closable until all components are closable.\n     *\n     * @returns {void}\n     */\n    _$validateClosability() {\n        var contentItem, isClosable, len, i;\n\n        isClosable = this.header._isClosable();\n\n        for (i = 0, len = this.contentItems.length; i < len; i++) {\n            if (!isClosable) {\n                break;\n            }\n\n            isClosable = this.contentItems[i].config.isClosable;\n        }\n\n        this.header._$setClosable(isClosable);\n    }\n\n    _$destroy() {\n        AbstractContentItem.prototype._$destroy.call(this);\n        this.header._$destroy();\n        this.element.off(\"mouseenter mouseleave\");\n    }\n\n    /**\n     * Ok, this one is going to be the tricky one: The user has dropped {contentItem} onto this stack.\n     *\n     * It was dropped on either the stacks header or the top, right, bottom or left bit of the content area\n     * (which one of those is stored in this._dropSegment). Now, if the user has dropped on the header the case\n     * is relatively clear: We add the item to the existing stack... job done (might be good to have\n     * tab reordering at some point, but lets not sweat it right now)\n     *\n     * If the item was dropped on the content part things are a bit more complicated. If it was dropped on either the\n     * top or bottom region we need to create a new column and place the items accordingly.\n     * Unless, of course if the stack is already within a column... in which case we want\n     * to add the newly created item to the existing column...\n     * either prepend or append it, depending on wether its top or bottom.\n     *\n     * Same thing for rows and left / right drop segments... so in total there are 9 things that can potentially happen\n     * (left, top, right, bottom) * is child of the right parent (row, column) + header drop\n     *\n     * @param    {lm.item} contentItem\n     *\n     * @returns {void}\n     */\n    _$onDrop(contentItem) {\n        /*\n         * The item was dropped on the header area. Just add it as a child of this stack and\n         * get the hell out of this logic\n         */\n        if (this._dropSegment === \"header\") {\n            this._resetHeaderDropZone();\n            this.addChild(contentItem, this._dropIndex);\n            return;\n        }\n\n        /*\n         * The stack is empty. Let's just add the element.\n         */\n        if (this._dropSegment === \"body\") {\n            this.addChild(contentItem);\n            return;\n        }\n\n        /*\n         * The item was dropped on the top-, left-, bottom- or right- part of the content. Let's\n         * aggregate some conditions to make the if statements later on more readable\n         */\n        var isVertical =\n                this._dropSegment === \"top\" || this._dropSegment === \"bottom\",\n            isHorizontal =\n                this._dropSegment === \"left\" || this._dropSegment === \"right\",\n            insertBefore =\n                this._dropSegment === \"top\" || this._dropSegment === \"left\",\n            hasCorrectParent =\n                (isVertical && this.parent.isColumn) ||\n                (isHorizontal && this.parent.isRow),\n            type = isVertical ? \"column\" : \"row\",\n            dimension = isVertical ? \"height\" : \"width\",\n            index,\n            stack,\n            rowOrColumn;\n\n        /*\n         * The content item can be either a component or a stack. If it is a component, wrap it into a stack\n         */\n        if (contentItem.isComponent) {\n            stack = this.layoutManager.createContentItem(\n                {\n                    type: \"stack\",\n                    header: contentItem.config.header || {},\n                },\n                this\n            );\n            stack._$init();\n            stack.addChild(contentItem);\n            contentItem = stack;\n        }\n\n        /*\n         * If the contentItem that's being dropped is not dropped on a Stack (cases which just passed above and\n         * which would wrap the contentItem in a Stack) we need to check whether contentItem is a RowOrColumn.\n         * If it is, we need to re-wrap it in a Stack like it was when it was dragged by its Tab (it was dragged!).\n         */\n        if (\n            contentItem.config.type === \"row\" ||\n            contentItem.config.type === \"column\"\n        ) {\n            stack = this.layoutManager.createContentItem(\n                {\n                    type: \"stack\",\n                },\n                this\n            );\n            stack.addChild(contentItem);\n            contentItem = stack;\n        }\n\n        /*\n         * If the item is dropped on top or bottom of a column or left and right of a row, it's already\n         * layd out in the correct way. Just add it as a child\n         */\n        if (hasCorrectParent) {\n            index = indexOf(this, this.parent.contentItems);\n            this.parent.addChild(\n                contentItem,\n                insertBefore ? index : index + 1,\n                true\n            );\n            this.config[dimension] *= 0.5;\n            contentItem.config[dimension] = this.config[dimension];\n            this.parent.callDownwards(\"setSize\");\n            /*\n             * This handles items that are dropped on top or bottom of a row or left / right of a column. We need\n             * to create the appropriate contentItem for them to live in\n             */\n        } else {\n            type = isVertical ? \"column\" : \"row\";\n            rowOrColumn = this.layoutManager.createContentItem(\n                {\n                    type: type,\n                },\n                this\n            );\n            this.parent.replaceChild(this, rowOrColumn);\n\n            rowOrColumn.addChild(\n                contentItem,\n                insertBefore ? 0 : undefined,\n                true\n            );\n            rowOrColumn.addChild(this, insertBefore ? undefined : 0, true);\n\n            this.config[dimension] = 50;\n            contentItem.config[dimension] = 50;\n            rowOrColumn.callDownwards(\"setSize\");\n        }\n        this.parent._validateDocking();\n    }\n\n    /**\n     * If the user hovers above the header part of the stack, indicate drop positions for tabs.\n     * otherwise indicate which segment of the body the dragged item would be dropped on\n     *\n     * @param    {Int} x Absolute Screen X\n     * @param    {Int} y Absolute Screen Y\n     *\n     * @returns {void}\n     */\n    _$highlightDropZone(x, y) {\n        var segment, area;\n\n        for (segment in this._contentAreaDimensions) {\n            area = this._contentAreaDimensions[segment].hoverArea;\n\n            if (area.x1 < x && area.x2 > x && area.y1 < y && area.y2 > y) {\n                if (segment === \"header\") {\n                    this._dropSegment = \"header\";\n                    this._highlightHeaderDropZone(this._sided ? y : x);\n                } else {\n                    this._resetHeaderDropZone();\n                    this._highlightBodyDropZone(segment);\n                }\n\n                return;\n            }\n        }\n    }\n\n    _$getArea() {\n        if (this.element.css(\"display\") === \"none\") {\n            return null;\n        }\n\n        var getArea = AbstractContentItem.prototype._$getArea,\n            headerArea = getArea.call(this, this.header.element),\n            contentArea = getArea.call(this, this.childElementContainer),\n            contentWidth = contentArea.x2 - contentArea.x1,\n            contentHeight = contentArea.y2 - contentArea.y1;\n\n        this._contentAreaDimensions = {\n            header: {\n                hoverArea: {\n                    x1: headerArea.x1,\n                    y1: headerArea.y1,\n                    x2: headerArea.x2,\n                    y2: headerArea.y2,\n                },\n                highlightArea: {\n                    x1: headerArea.x1,\n                    y1: headerArea.y1,\n                    x2: headerArea.x2,\n                    y2: headerArea.y2,\n                },\n            },\n        };\n\n        /**\n         * If this Stack is a parent to rows, columns or other stacks only its\n         * header is a valid dropzone.\n         */\n        if (\n            this._activeContentItem &&\n            this._activeContentItem.isComponent === false\n        ) {\n            return headerArea;\n        }\n\n        /**\n         * Highlight the entire body if the stack is empty\n         */\n        if (this.contentItems.length === 0) {\n            this._contentAreaDimensions.body = {\n                hoverArea: {\n                    x1: contentArea.x1,\n                    y1: contentArea.y1,\n                    x2: contentArea.x2,\n                    y2: contentArea.y2,\n                },\n                highlightArea: {\n                    x1: contentArea.x1,\n                    y1: contentArea.y1,\n                    x2: contentArea.x2,\n                    y2: contentArea.y2,\n                },\n            };\n\n            return getArea.call(this, this.element);\n        }\n\n        this._contentAreaDimensions.left = {\n            hoverArea: {\n                x1: contentArea.x1,\n                y1: contentArea.y1,\n                x2: contentArea.x1 + contentWidth * 0.25,\n                y2: contentArea.y2,\n            },\n            highlightArea: {\n                x1: contentArea.x1,\n                y1: contentArea.y1,\n                x2: contentArea.x1 + contentWidth * 0.5,\n                y2: contentArea.y2,\n            },\n        };\n\n        this._contentAreaDimensions.top = {\n            hoverArea: {\n                x1: contentArea.x1 + contentWidth * 0.25,\n                y1: contentArea.y1,\n                x2: contentArea.x1 + contentWidth * 0.75,\n                y2: contentArea.y1 + contentHeight * 0.5,\n            },\n            highlightArea: {\n                x1: contentArea.x1,\n                y1: contentArea.y1,\n                x2: contentArea.x2,\n                y2: contentArea.y1 + contentHeight * 0.5,\n            },\n        };\n\n        this._contentAreaDimensions.right = {\n            hoverArea: {\n                x1: contentArea.x1 + contentWidth * 0.75,\n                y1: contentArea.y1,\n                x2: contentArea.x2,\n                y2: contentArea.y2,\n            },\n            highlightArea: {\n                x1: contentArea.x1 + contentWidth * 0.5,\n                y1: contentArea.y1,\n                x2: contentArea.x2,\n                y2: contentArea.y2,\n            },\n        };\n\n        this._contentAreaDimensions.bottom = {\n            hoverArea: {\n                x1: contentArea.x1 + contentWidth * 0.25,\n                y1: contentArea.y1 + contentHeight * 0.5,\n                x2: contentArea.x1 + contentWidth * 0.75,\n                y2: contentArea.y2,\n            },\n            highlightArea: {\n                x1: contentArea.x1,\n                y1: contentArea.y1 + contentHeight * 0.5,\n                x2: contentArea.x2,\n                y2: contentArea.y2,\n            },\n        };\n\n        return getArea.call(this, this.element);\n    }\n\n    _highlightHeaderDropZone(x) {\n        var i,\n            tabElement,\n            tabsLength = this.header.tabs.length,\n            isAboveTab = false,\n            tabTop,\n            tabLeft,\n            offset,\n            placeHolderLeft,\n            headerOffset,\n            tabWidth,\n            halfX;\n\n        // Empty stack\n        if (tabsLength === 0) {\n            headerOffset = this.header.element.offset();\n\n            this.layoutManager.dropTargetIndicator.highlightArea({\n                x1: headerOffset.left,\n                x2: headerOffset.left + 100,\n                y1: headerOffset.top + this.header.element.height() - 20,\n                y2: headerOffset.top + this.header.element.height(),\n            });\n\n            return;\n        }\n\n        for (i = 0; i < tabsLength; i++) {\n            tabElement = this.header.tabs[i].element;\n            offset = tabElement.offset();\n            if (this._sided) {\n                tabLeft = offset.top;\n                tabTop = offset.left;\n                tabWidth = tabElement.height();\n            } else {\n                tabLeft = offset.left;\n                tabTop = offset.top;\n                tabWidth = tabElement.width();\n            }\n\n            if (x > tabLeft && x < tabLeft + tabWidth) {\n                isAboveTab = true;\n                break;\n            }\n        }\n\n        if (isAboveTab === false && x < tabLeft) {\n            return;\n        }\n\n        halfX = tabLeft + tabWidth / 2;\n\n        if (x < halfX) {\n            this._dropIndex = i;\n            tabElement.before(this.layoutManager.tabDropPlaceholder);\n        } else {\n            this._dropIndex = Math.min(i + 1, tabsLength);\n            tabElement.after(this.layoutManager.tabDropPlaceholder);\n        }\n\n        if (this._sided) {\n            var placeHolderTop = this.layoutManager.tabDropPlaceholder.offset()\n                .top;\n            this.layoutManager.dropTargetIndicator.highlightArea({\n                x1: tabTop,\n                x2: tabTop + tabElement.innerHeight(),\n                y1: placeHolderTop,\n                y2:\n                    placeHolderTop +\n                    this.layoutManager.tabDropPlaceholder.width(),\n            });\n            return;\n        }\n        placeHolderLeft = this.layoutManager.tabDropPlaceholder.offset().left;\n\n        this.layoutManager.dropTargetIndicator.highlightArea({\n            x1: placeHolderLeft,\n            x2: placeHolderLeft + this.layoutManager.tabDropPlaceholder.width(),\n            y1: tabTop,\n            y2: tabTop + tabElement.innerHeight(),\n        });\n    }\n\n    _resetHeaderDropZone() {\n        this.layoutManager.tabDropPlaceholder.remove();\n    }\n\n    toggleMaximise(e) {\n        if (!this.isMaximised) this.dock(false);\n        AbstractContentItem.prototype.toggleMaximise.call(this, e);\n    }\n\n    _setupHeaderPosition() {\n        var side =\n            [\"right\", \"left\", \"bottom\"].indexOf(this._header.show) >= 0 &&\n            this._header.show;\n        this.header.element.toggle(!!this._header.show);\n        this._side = side;\n        this._sided = [\"right\", \"left\"].indexOf(this._side) >= 0;\n        this.element.removeClass(\"lm_left lm_right lm_bottom\");\n        if (this._side) this.element.addClass(\"lm_\" + this._side);\n        if (\n            this.element.find(\".lm_header\").length &&\n            this.childElementContainer\n        ) {\n            var headerPosition =\n                [\"right\", \"bottom\"].indexOf(this._side) >= 0\n                    ? \"before\"\n                    : \"after\";\n            this.header.element[headerPosition](this.childElementContainer);\n            this.callDownwards(\"setSize\");\n        }\n    }\n\n    _highlightBodyDropZone(segment) {\n        var highlightArea = this._contentAreaDimensions[segment].highlightArea;\n        this.layoutManager.dropTargetIndicator.highlightArea(highlightArea);\n        this._dropSegment = segment;\n    }\n}\n","import DragListener from '../utils/DragListener'\nimport $ from 'jquery'\n\nexport default class Splitter {\n    constructor(isVertical, size, grabSize) {\n        this._isVertical = isVertical;\n        this._size = size;\n        this._grabSize = grabSize < size ? size : grabSize;\n\n        this.element = this._createElement();\n        this._dragListener = new DragListener(this.element);\n    }\n\n    on(event, callback, context) {\n        this._dragListener.on(event, callback, context);\n    }\n\n    _$destroy() {\n        this.element.remove();\n    }\n\n    _createElement() {\n        var dragHandle = $('<div class=\"lm_drag_handle\"></div>');\n        var element = $('<div class=\"lm_splitter\"></div>');\n        element.append(dragHandle);\n\n        var handleExcessSize = this._grabSize - this._size;\n        var handleExcessPos = handleExcessSize / 2;\n\n        if (this._isVertical) {\n            dragHandle.css('top', -handleExcessPos);\n            dragHandle.css('height', this._size + handleExcessSize);\n            element.addClass('lm_vertical');\n            element['height'](this._size);\n        } else {\n            dragHandle.css('left', -handleExcessPos);\n            dragHandle.css('width', this._size + handleExcessSize);\n            element.addClass('lm_horizontal');\n            element['width'](this._size);\n        }\n\n        return element;\n    }\n}\n","import AbstractContentItem from '../items/AbstractContentItem'\nimport Stack from '../items/Stack'\nimport Splitter from '../controls/Splitter'\nimport {\n    fnBind,\n    animFrame,\n    indexOf\n} from '../utils/utils'\nimport $ from 'jquery'\n\n\n\nexport default class RowOrColumn extends AbstractContentItem {\n    constructor(isColumn, layoutManager, config, parent) {\n      \n        super(layoutManager, config, parent);\n\n        this.isRow = !isColumn;\n        this.isColumn = isColumn;\n\n        this.element = $('<div class=\"lm_item lm_' + (isColumn ? 'column' : 'row') + '\"></div>');\n        this.childElementContainer = this.element;\n        this._splitterSize = layoutManager.config.dimensions.borderWidth;\n        this._splitterGrabSize = layoutManager.config.dimensions.borderGrabWidth;\n        this._isColumn = isColumn;\n        this._dimension = isColumn ? 'height' : 'width';\n        this._splitter = [];\n        this._splitterPosition = null;\n        this._splitterMinPosition = null;\n        this._splitterMaxPosition = null;\n    }\n\n\n    /**\n     * Add a new contentItem to the Row or Column\n     *\n     * @param {AbstractContentItem} contentItem\n     * @param {[int]} index The position of the new item within the Row or Column.\n     *                      If no index is provided the item will be added to the end\n     * @param {[bool]} _$suspendResize If true the items won't be resized. This will leave the item in\n     *                                 an inconsistent state and is only intended to be used if multiple\n     *                                 children need to be added in one go and resize is called afterwards\n     *\n     * @returns {void}\n     */\n    addChild(contentItem, index, _$suspendResize) {\n\n        var newItemSize, itemSize, i, splitterElement;\n\n        contentItem = this.layoutManager._$normalizeContentItem(contentItem, this);\n\n        if (index === undefined) {\n            index = this.contentItems.length;\n        }\n\n        if (this.contentItems.length > 0) {\n            splitterElement = this._createSplitter(Math.max(0, index - 1)).element;\n\n            if (index > 0) {\n                this.contentItems[index - 1].element.after(splitterElement);\n                splitterElement.after(contentItem.element);\n                if (this._isDocked(index - 1)) {\n                    this._splitter[index - 1].element.hide();\n                    this._splitter[index].element.show();\n                }\n            } else {\n                this.contentItems[0].element.before(splitterElement);\n                splitterElement.before(contentItem.element);\n            }\n        } else {\n            this.childElementContainer.append(contentItem.element);\n        }\n\n        AbstractContentItem.prototype.addChild.call(this, contentItem, index);\n\n        newItemSize = (1 / this.contentItems.length) * 100;\n\n        if (_$suspendResize === true) {\n            this.emitBubblingEvent('stateChanged');\n            return;\n        }\n\n        for (i = 0; i < this.contentItems.length; i++) {\n            if (this.contentItems[i] === contentItem) {\n                contentItem.config[this._dimension] = newItemSize;\n            } else {\n                itemSize = this.contentItems[i].config[this._dimension] *= (100 - newItemSize) / 100;\n                this.contentItems[i].config[this._dimension] = itemSize;\n            }\n        }\n\n        this.callDownwards('setSize');\n        this.emitBubblingEvent('stateChanged');\n        this._validateDocking();\n    }\n\n\n    /**\n     * Undisplays a child of this element\n     *\n     * @param   {AbstractContentItem} contentItem\n     *\n     * @returns {void}\n     */\n    undisplayChild(contentItem) {\n        var undisplayedItemSize = contentItem.config[this._dimension],\n            index = indexOf(contentItem, this.contentItems),\n            splitterIndex = Math.max(index - 1, 0),\n            i,\n            childItem;\n\n        if (index === -1) {\n            throw new Error('Can\\'t undisplay child. ContentItem is not child of this Row or Column');\n        }\n\n        /**\n         * Hide the splitter before the item or after if the item happens\n         * to be the first in the row/column\n         */\n        if (this._splitter[splitterIndex]) {\n            this._splitter[splitterIndex].element.hide();\n        }\n\n        if (splitterIndex < this._splitter.length) {\n            if (this._isDocked(splitterIndex))\n                this._splitter[splitterIndex].element.hide();\n        }\n\n        /**\n         * Allocate the space that the hidden item occupied to the remaining items\n         */\n        var docked = this._isDocked();\n        for (i = 0; i < this.contentItems.length; i++) {\n            if (this.contentItems[i] !== contentItem) {\n                if (!this._isDocked(i))\n                    this.contentItems[i].config[this._dimension] += undisplayedItemSize / (this.contentItems.length - 1 - docked);                \n            } else {\n              this.contentItems[i].config[this._dimension] = 0\n            }\n        }\n\n        if(this.contentItems.length === 1){\n            AbstractContentItem.prototype.undisplayChild.call(this, contentItem);\n        }\n\n        this.callDownwards('setSize');\n        this.emitBubblingEvent('stateChanged');\n    }\n\n\n    /**\n     * Removes a child of this element\n     *\n     * @param   {AbstractContentItem} contentItem\n     * @param   {boolean} keepChild   If true the child will be removed, but not destroyed\n     *\n     * @returns {void}\n     */\n    removeChild(contentItem, keepChild) {\n        var removedItemSize = contentItem.config[this._dimension],\n            index = indexOf(contentItem, this.contentItems),\n            splitterIndex = Math.max(index - 1, 0),\n            i,\n            childItem;\n        if (index === -1) {\n            throw new Error('Can\\'t remove child. ContentItem is not child of this Row or Column');\n        }\n\n        /**\n         * Remove the splitter before the item or after if the item happens\n         * to be the first in the row/column\n         */\n        if (this._splitter[splitterIndex]) {\n            this._splitter[splitterIndex]._$destroy();\n            this._splitter.splice(splitterIndex, 1);\n        }\n\n        if (splitterIndex < this._splitter.length) {\n            if (this._isDocked(splitterIndex))\n                this._splitter[splitterIndex].element.hide();\n        }\n        /**\n         * Allocate the space that the removed item occupied to the remaining items\n         */\n        var docked = this._isDocked();\n        for (i = 0; i < this.contentItems.length; i++) {\n            if (this.contentItems[i] !== contentItem) {\n                if (!this._isDocked(i))\n                    this.contentItems[i].config[this._dimension] += removedItemSize / (this.contentItems.length - 1 - docked);\n\n            }\n        }\n\n        AbstractContentItem.prototype.removeChild.call(this, contentItem, keepChild);\n\n        if (this.contentItems.length === 1 && this.config.isClosable === true) {\n            childItem = this.contentItems[0];\n            this.contentItems = [];\n            this.parent.replaceChild(this, childItem, true);\n            this._validateDocking(this.parent);\n        } else {\n            this.callDownwards('setSize');\n            this.emitBubblingEvent('stateChanged');\n            this._validateDocking();\n        }\n    }\n\n    /**\n     * Replaces a child of this Row or Column with another contentItem\n     *\n     * @param   {AbstractContentItem} oldChild\n     * @param   {AbstractContentItem} newChild\n     *\n     * @returns {void}\n     */\n    replaceChild(oldChild, newChild) {\n        var size = oldChild.config[this._dimension];\n        AbstractContentItem.prototype.replaceChild.call(this, oldChild, newChild);\n        newChild.config[this._dimension] = size;\n        this.callDownwards('setSize');\n        this.emitBubblingEvent('stateChanged');\n    }\n\n    /**\n     * Called whenever the dimensions of this item or one of its parents change\n     *\n     * @returns {void}\n     */\n    setSize() {\n        if (this.contentItems.length > 0) {\n            this._calculateRelativeSizes();\n            this._setAbsoluteSizes();\n        }\n        this.emitBubblingEvent('stateChanged');\n        this.emit('resize');\n    }\n\n    /**\n     * Dock or undock a child if it posiible\n     *\n     * @param   {AbstractContentItem} contentItem\n     * @param   {Boolean} mode or toggle if undefined\n     * @param   {Boolean} collapsed after docking\n     *\n     * @returns {void}\n     */\n    dock(contentItem, mode, collapsed) {\n        if (this.contentItems.length === 1)\n            throw new Error('Can\\'t dock child when it single');\n\n        var removedItemSize = contentItem.config[this._dimension],\n            headerSize = this.layoutManager.config.dimensions.headerHeight,\n            index = indexOf(contentItem, this.contentItems),\n            splitterIndex = Math.max(index - 1, 0);\n\n        if (index === -1) {\n            throw new Error('Can\\'t dock child. ContentItem is not child of this Row or Column');\n        }\n        var isDocked = contentItem._docker && contentItem._docker.docked;\n        var i\n        if (typeof mode != 'undefined')\n            if (mode == isDocked)\n                return;\n        if (isDocked) { // undock it\n            this._splitter[splitterIndex].element.show();\n            for (i = 0; i < this.contentItems.length; i++) {\n                var newItemSize = contentItem._docker.size;\n                if (this.contentItems[i] === contentItem) {\n                    contentItem.config[this._dimension] = newItemSize;\n                } else {\n                    itemSize = this.contentItems[i].config[this._dimension] *= (100 - newItemSize) / 100;\n                    this.contentItems[i].config[this._dimension] = itemSize;\n                }\n            }\n            contentItem._docker = {\n                docked: false\n            };\n        } else { // dock\n            if (this.contentItems.length - this._isDocked() < 2)\n                throw new Error('Can\\'t dock child when it is last in ' + this.config.type);\n            var autoside = {\n                column: {\n                    first: 'top',\n                    last: 'bottom'\n                },\n                row: {\n                    first: 'left',\n                    last: 'right'\n                }\n            };\n            var required = autoside[this.config.type][index ? 'last' : 'first'];\n            if (contentItem.header.position() != required)\n                contentItem.header.position(required);\n\n            if (this._splitter[splitterIndex]) {\n                this._splitter[splitterIndex].element.hide();\n            }\n            var docked = this._isDocked();\n            for (i = 0; i < this.contentItems.length; i++) {\n                if (this.contentItems[i] !== contentItem) {\n                    if (!this._isDocked(i))\n                        this.contentItems[i].config[this._dimension] += removedItemSize / (this.contentItems.length - 1 - docked);\n                } else\n                    this.contentItems[i].config[this._dimension] = 0;\n            }\n            contentItem._docker = {\n                dimension: this._dimension,\n                size: removedItemSize,\n                realSize: contentItem.element[this._dimension]() - headerSize,\n                docked: true,\n            };\n            if (collapsed)\n                contentItem.childElementContainer[this._dimension](0);\n        }\n        contentItem.element.toggleClass('lm_docked', contentItem._docker.docked);\n        this.callDownwards('setSize');\n        this.emitBubblingEvent('stateChanged');\n        this._validateDocking();\n    }\n\n    /**\n     * Invoked recursively by the layout manager. AbstractContentItem.init appends\n     * the contentItem's DOM elements to the container, RowOrColumn init adds splitters\n     * in between them\n     *\n     * @package private\n     * @override AbstractContentItem._$init\n     * @returns {void}\n     */\n    _$init() {\n        if (this.isInitialised === true) return;\n\n        var i;\n\n        AbstractContentItem.prototype._$init.call(this);\n\n        for (i = 0; i < this.contentItems.length - 1; i++) {\n            this.contentItems[i].element.after(this._createSplitter(i).element);\n        }\n        for (i = 0; i < this.contentItems.length; i++) {\n            if (this.contentItems[i]._header && this.contentItems[i]._header.docked)\n                this.dock(this.contentItems[i], true, true);\n        }\n    }\n\n    /**\n     * Turns the relative sizes calculated by _calculateRelativeSizes into\n     * absolute pixel values and applies them to the children's DOM elements\n     *\n     * Assigns additional pixels to counteract Math.floor\n     *\n     * @private\n     * @returns {void}\n     */\n    _setAbsoluteSizes() {\n        var i,\n            sizeData = this._calculateAbsoluteSizes();\n\n        for (i = 0; i < this.contentItems.length; i++) {\n            if (sizeData.additionalPixel - i > 0) {\n                sizeData.itemSizes[i]++;\n            }\n\n            if (this._isColumn) {\n                this.contentItems[i].element.width(sizeData.totalWidth);\n                this.contentItems[i].element.height(sizeData.itemSizes[i]);\n            } else {\n                this.contentItems[i].element.width(sizeData.itemSizes[i]);\n                this.contentItems[i].element.height(sizeData.totalHeight);\n            }\n        }\n    }\n\n    /**\n     * Calculates the absolute sizes of all of the children of this Item.\n     * @returns {object} - Set with absolute sizes and additional pixels.\n     */\n    _calculateAbsoluteSizes() {\n        var i,\n            totalSplitterSize = (this.contentItems.length - 1) * this._splitterSize,\n            headerSize = this.layoutManager.config.dimensions.headerHeight,\n            totalWidth = this.element.width(),\n            totalHeight = this.element.height(),\n            totalAssigned = 0,\n            additionalPixel,\n            itemSize,\n            itemSizes = [];\n\n        if (this._isColumn) {\n            totalHeight -= totalSplitterSize;\n        } else {\n            totalWidth -= totalSplitterSize;\n        }\n        for (i = 0; i < this.contentItems.length; i++) {\n            if (this._isDocked(i))\n                if (this._isColumn) {\n                    totalHeight -= headerSize - this._splitterSize;\n                } else {\n                    totalWidth -= headerSize - this._splitterSize;\n                }\n        }\n\n        for (i = 0; i < this.contentItems.length; i++) {\n            if (this._isColumn) {\n                itemSize = Math.floor(totalHeight * (this.contentItems[i].config.height / 100));\n            } else {\n                itemSize = Math.floor(totalWidth * (this.contentItems[i].config.width / 100));\n            }\n            if (this._isDocked(i))\n                itemSize = headerSize;\n\n            totalAssigned += itemSize;\n            itemSizes.push(itemSize);\n        }\n\n        additionalPixel = Math.floor((this._isColumn ? totalHeight : totalWidth) - totalAssigned);\n\n        return {\n            itemSizes: itemSizes,\n            additionalPixel: additionalPixel,\n            totalWidth: totalWidth,\n            totalHeight: totalHeight\n        };\n    }\n\n    /**\n     * Calculates the relative sizes of all children of this Item. The logic\n     * is as follows:\n     *\n     * - Add up the total size of all items that have a configured size\n     *\n     * - If the total == 100 (check for floating point errors)\n     *        Excellent, job done\n     *\n     * - If the total is > 100,\n     *        set the size of items without set dimensions to 1/3 and add this to the total\n     *        set the size off all items so that the total is hundred relative to their original size\n     *\n     * - If the total is < 100\n     *        If there are items without set dimensions, distribute the remainder to 100 evenly between them\n     *        If there are no items without set dimensions, increase all items sizes relative to\n     *        their original size so that they add up to 100\n     *\n     * @private\n     * @returns {void}\n     */\n    _calculateRelativeSizes() {\n\n        var i,\n            total = 0,\n            itemsWithoutSetDimension = [],\n            dimension = this._isColumn ? 'height' : 'width';\n\n        for (i = 0; i < this.contentItems.length; i++) {\n            if (this.contentItems[i].config[dimension] !== undefined) {\n                total += this.contentItems[i].config[dimension];\n            } else {\n                itemsWithoutSetDimension.push(this.contentItems[i]);\n            }\n        }\n\n        /**\n         * Everything adds up to hundred, all good :-)\n         */\n        if (Math.round(total) === 100) {\n            this._respectMinItemWidth();\n            return;\n        }\n\n        /**\n         * Allocate the remaining size to the items without a set dimension\n         */\n        if (Math.round(total) < 100 && itemsWithoutSetDimension.length > 0) {\n            for (i = 0; i < itemsWithoutSetDimension.length; i++) {\n                itemsWithoutSetDimension[i].config[dimension] = (100 - total) / itemsWithoutSetDimension.length;\n            }\n            this._respectMinItemWidth();\n            return;\n        }\n\n        /**\n         * If the total is > 100, but there are also items without a set dimension left, assing 50\n         * as their dimension and add it to the total\n         *\n         * This will be reset in the next step\n         */\n        if (Math.round(total) > 100) {\n            for (i = 0; i < itemsWithoutSetDimension.length; i++) {\n                itemsWithoutSetDimension[i].config[dimension] = 50;\n                total += 50;\n            }\n        }\n\n        /**\n         * Set every items size relative to 100 relative to its size to total\n         */\n        for (i = 0; i < this.contentItems.length; i++) {\n            this.contentItems[i].config[dimension] = (this.contentItems[i].config[dimension] / total) * 100;\n        }\n\n        this._respectMinItemWidth();\n    }\n\n    /**\n     * Adjusts the column widths to respect the dimensions minItemWidth if set.\n     * @returns {}\n     */\n    _respectMinItemWidth() {\n        var minItemWidth = this.layoutManager.config.dimensions ? (this.layoutManager.config.dimensions.minItemWidth || 0) : 0,\n            sizeData = null,\n            entriesOverMin = [],\n            totalOverMin = 0,\n            totalUnderMin = 0,\n            remainingWidth = 0,\n            itemSize = 0,\n            contentItem = null,\n            reducePercent,\n            reducedWidth,\n            allEntries = [],\n            entry;\n\n        if (this._isColumn || !minItemWidth || this.contentItems.length <= 1) {\n            return;\n        }\n\n        sizeData = this._calculateAbsoluteSizes();\n\n        /**\n         * Figure out how much we are under the min item size total and how much room we have to use.\n         */\n        for (var i = 0; i < this.contentItems.length; i++) {\n\n            contentItem = this.contentItems[i];\n            itemSize = sizeData.itemSizes[i];\n\n            if (itemSize < minItemWidth) {\n                totalUnderMin += minItemWidth - itemSize;\n                entry = {\n                    width: minItemWidth\n                };\n\n            } else {\n                totalOverMin += itemSize - minItemWidth;\n                entry = {\n                    width: itemSize\n                };\n                entriesOverMin.push(entry);\n            }\n\n            allEntries.push(entry);\n        }\n\n        /**\n         * If there is nothing under min, or there is not enough over to make up the difference, do nothing.\n         */\n        if (totalUnderMin === 0 || totalUnderMin > totalOverMin) {\n            return;\n        }\n\n        /**\n         * Evenly reduce all columns that are over the min item width to make up the difference.\n         */\n        reducePercent = totalUnderMin / totalOverMin;\n        remainingWidth = totalUnderMin;\n        for (i = 0; i < entriesOverMin.length; i++) {\n            entry = entriesOverMin[i];\n            reducedWidth = Math.round((entry.width - minItemWidth) * reducePercent);\n            remainingWidth -= reducedWidth;\n            entry.width -= reducedWidth;\n        }\n\n        /**\n         * Take anything remaining from the last item.\n         */\n        if (remainingWidth !== 0) {\n            allEntries[allEntries.length - 1].width -= remainingWidth;\n        }\n\n        /**\n         * Set every items size relative to 100 relative to its size to total\n         */\n        for (i = 0; i < this.contentItems.length; i++) {\n            this.contentItems[i].config.width = (allEntries[i].width / sizeData.totalWidth) * 100;\n        }\n    }\n\n    /**\n     * Instantiates a new Splitter, binds events to it and adds\n     * it to the array of splitters at the position specified as the index argument\n     *\n     * What it doesn't do though is append the splitter to the DOM\n     *\n     * @param   {Int} index The position of the splitter\n     *\n     * @returns {Splitter}\n     */\n    _createSplitter(index) {\n        var splitter;\n        splitter = new Splitter(this._isColumn, this._splitterSize, this._splitterGrabSize);\n        splitter.on('drag', fnBind(this._onSplitterDrag, this, [splitter]), this);\n        splitter.on('dragStop', fnBind(this._onSplitterDragStop, this, [splitter]), this);\n        splitter.on('dragStart', fnBind(this._onSplitterDragStart, this, [splitter]), this);\n        this._splitter.splice(index, 0, splitter);\n        return splitter;\n    }\n\n    /**\n     * Locates the instance of Splitter in the array of\n     * registered splitters and returns a map containing the contentItem\n     * before and after the splitters, both of which are affected if the\n     * splitter is moved\n     *\n     * @param   {Splitter} splitter\n     *\n     * @returns {Object} A map of contentItems that the splitter affects\n     */\n    _getItemsForSplitter(splitter) {\n        var index = indexOf(splitter, this._splitter);\n\n        return {\n            before: this.contentItems[index],\n            after: this.contentItems[index + 1]\n        };\n    }\n\n    /**\n     * Gets docking information\n     * @private\n     */\n    _isDocked(index) {\n        if (typeof index == 'undefined') {\n            var count = 0;\n            for (var i = 0; i < this.contentItems.length; ++i)\n                if (this._isDocked(i))\n                    count++;\n            return count;\n        }\n        if (index < this.contentItems.length)\n            return this.contentItems[index]._docker && this.contentItems[index]._docker.docked;\n    }\n\n    /**\n     * Validate if row or column has ability to dock\n     * @private\n     */\n    _validateDocking(that) {\n        that = that || this;\n        var can = that.contentItems.length - that._isDocked() > 1;\n        for (var i = 0; i < that.contentItems.length; ++i)\n            if (that.contentItems[i] instanceof Stack) {\n                that.contentItems[i].header._setDockable(that._isDocked(i) || can);\n                that.contentItems[i].header._$setClosable(can);\n            }\n    }\n\n    /**\n     * Gets the minimum dimensions for the given item configuration array\n     * @param item\n     * @private\n     */\n    _getMinimumDimensions(arr) {\n        var minWidth = 0,\n            minHeight = 0;\n\n        for (var i = 0; i < arr.length; ++i) {\n            minWidth = Math.max(arr[i].minWidth || 0, minWidth);\n            minHeight = Math.max(arr[i].minHeight || 0, minHeight);\n        }\n\n        return {\n            horizontal: minWidth,\n            vertical: minHeight\n        };\n    }\n\n    /**\n     * Invoked when a splitter's dragListener fires dragStart. Calculates the splitters\n     * movement area once (so that it doesn't need calculating on every mousemove event)\n     *\n     * @param   {Splitter} splitter\n     *\n     * @returns {void}\n     */\n    _onSplitterDragStart(splitter) {\n        var items = this._getItemsForSplitter(splitter),\n            minSize = this.layoutManager.config.dimensions[this._isColumn ? 'minItemHeight' : 'minItemWidth'];\n\n        var beforeMinDim = this._getMinimumDimensions(items.before.config.content);\n        var beforeMinSize = this._isColumn ? beforeMinDim.vertical : beforeMinDim.horizontal;\n\n        var afterMinDim = this._getMinimumDimensions(items.after.config.content);\n        var afterMinSize = this._isColumn ? afterMinDim.vertical : afterMinDim.horizontal;\n\n        this._splitterPosition = 0;\n        this._splitterMinPosition = -1 * (items.before.element[this._dimension]() - (beforeMinSize || minSize));\n        this._splitterMaxPosition = items.after.element[this._dimension]() - (afterMinSize || minSize);\n    }\n\n    /**\n     * Invoked when a splitter's DragListener fires drag. Updates the splitters DOM position,\n     * but not the sizes of the elements the splitter controls in order to minimize resize events\n     *\n     * @param   {Splitter} splitter\n     * @param   {Int} offsetX  Relative pixel values to the splitters original position. Can be negative\n     * @param   {Int} offsetY  Relative pixel values to the splitters original position. Can be negative\n     *\n     * @returns {void}\n     */\n    _onSplitterDrag(splitter, offsetX, offsetY) {\n        var offset = this._isColumn ? offsetY : offsetX;\n\n        if (offset > this._splitterMinPosition && offset < this._splitterMaxPosition) {\n            this._splitterPosition = offset;\n            splitter.element.css(this._isColumn ? 'top' : 'left', offset);\n        }\n    }\n\n    /**\n     * Invoked when a splitter's DragListener fires dragStop. Resets the splitters DOM position,\n     * and applies the new sizes to the elements before and after the splitter and their children\n     * on the next animation frame\n     *\n     * @param   {Splitter} splitter\n     *\n     * @returns {void}\n     */\n    _onSplitterDragStop(splitter) {\n\n        var items = this._getItemsForSplitter(splitter),\n            sizeBefore = items.before.element[this._dimension](),\n            sizeAfter = items.after.element[this._dimension](),\n            splitterPositionInRange = (this._splitterPosition + sizeBefore) / (sizeBefore + sizeAfter),\n            totalRelativeSize = items.before.config[this._dimension] + items.after.config[this._dimension];\n\n        items.before.config[this._dimension] = splitterPositionInRange * totalRelativeSize;\n        items.after.config[this._dimension] = (1 - splitterPositionInRange) * totalRelativeSize;\n\n        splitter.element.css({\n            'top': 0,\n            'left': 0\n        });\n\n        animFrame(fnBind(this.callDownwards, this, ['setSize']));\n    }\n}\n","import AbstractContentItem from '../items/AbstractContentItem'\nimport RowOrColumn from '../items/RowOrColumn'\nimport $ from 'jquery'\n\n\nexport default class Root extends AbstractContentItem {\n    constructor(layoutManager, config, containerElement) {\n      \n        super(layoutManager, config, null);\n\n        this.isRoot = true;\n        this.type = 'root';\n        this.element = $('<div class=\"lm_goldenlayout lm_item lm_root\"></div>');\n        this.childElementContainer = this.element;\n        this._containerElement = containerElement;\n        this._containerElement.append(this.element);\n    }\n\n    addChild(contentItem) {\n        if (this.contentItems.length > 0) {\n            throw new Error('Root node can only have a single child');\n        }\n\n        contentItem = this.layoutManager._$normalizeContentItem(contentItem, this);\n        this.childElementContainer.append(contentItem.element);\n        AbstractContentItem.prototype.addChild.call(this, contentItem);\n\n        this.callDownwards('setSize');\n        this.emitBubblingEvent('stateChanged');\n    }\n\n    setSize(width, height) {\n        width = (typeof width === 'undefined') ? this._containerElement.width() : width;\n        height = (typeof height === 'undefined') ? this._containerElement.height() : height;\n\n        this.element.width(width);\n        this.element.height(height);\n\n        /*\n         * Root can be empty\n         */\n        if (this.contentItems[0]) {\n            this.contentItems[0].element.width(width);\n            this.contentItems[0].element.height(height);\n        }\n    }\n\n    _$highlightDropZone(x, y, area) {\n        this.layoutManager.tabDropPlaceholder.remove();\n        AbstractContentItem.prototype._$highlightDropZone.apply(this, arguments);\n    }\n\n    _$onDrop(contentItem, area) {\n        var stack;\n\n        if (contentItem.isComponent) {\n            stack = this.layoutManager.createContentItem({\n                type: 'stack',\n                header: contentItem.config.header || {}\n            }, this);\n            stack._$init();\n            stack.addChild(contentItem);\n            contentItem = stack;\n        }\n\n        if (!this.contentItems.length) {\n            this.addChild(contentItem);\n        } else {\n            /*\n             * If the contentItem that's being dropped is not dropped on a Stack (cases which just passed above and \n             * which would wrap the contentItem in a Stack) we need to check whether contentItem is a RowOrColumn.\n             * If it is, we need to re-wrap it in a Stack like it was when it was dragged by its Tab (it was dragged!).\n             */\n            if(contentItem.config.type === 'row' || contentItem.config.type === 'column'){\n                stack = this.layoutManager.createContentItem({\n                    type: 'stack'\n                }, this)\n                stack.addChild(contentItem)\n                contentItem = stack\n            }\n\n            var type = area.side[0] == 'x' ? 'row' : 'column';\n            var dimension = area.side[0] == 'x' ? 'width' : 'height';\n            var insertBefore = area.side[1] == '2';\n            var column = this.contentItems[0];\n            if (!(column instanceof RowOrColumn) || column.type != type) {\n                var rowOrColumn = this.layoutManager.createContentItem({\n                    type: type\n                }, this);\n                this.replaceChild(column, rowOrColumn);\n                rowOrColumn.addChild(contentItem, insertBefore ? 0 : undefined, true);\n                rowOrColumn.addChild(column, insertBefore ? undefined : 0, true);\n                column.config[dimension] = 50;\n                contentItem.config[dimension] = 50;\n                rowOrColumn.callDownwards('setSize');\n            } else {\n                var sibbling = column.contentItems[insertBefore ? 0 : column.contentItems.length - 1]\n                column.addChild(contentItem, insertBefore ? 0 : undefined, true);\n                sibbling.config[dimension] *= 0.5;\n                contentItem.config[dimension] = sibbling.config[dimension];\n                column.callDownwards('setSize');\n            }\n        }\n    }\n}\n","import EventEmitter from '../utils/EventEmitter'\nimport $ from 'jquery'\n\nexport default class ItemContainer extends EventEmitter {\n    constructor(config, parent, layoutManager) {\n\n        super();\n\n        this.width = null;\n        this.height = null;\n        this.title = config.componentName;\n        this.parent = parent;\n        this.layoutManager = layoutManager;\n        this.isHidden = false;\n\n        this._config = config;\n        this._element = $([\n            '<div class=\"lm_item_container\">',\n            '<div class=\"lm_content\"></div>',\n            '</div>'\n        ].join(''));\n\n        this._contentElement = this._element.find('.lm_content');\n    }\n\n\n    /**\n     * Get the inner DOM element the container's content\n     * is intended to live in\n     *\n     * @returns {DOM element}\n     */\n    getElement() {\n        return this._contentElement;\n    }\n\n\n    /**\n     * Hide the container. Notifies the containers content first\n     * and then hides the DOM node. If the container is already hidden\n     * this should have no effect\n     *\n     * @returns {void}\n     */\n    hide() {\n        this.emit('hide');\n        this.isHidden = true;\n        this._element.hide();\n    }\n\n\n    /**\n     * Shows a previously hidden container. Notifies the\n     * containers content first and then shows the DOM element.\n     * If the container is already visible this has no effect.\n     *\n     * @returns {void}\n     */\n    show() {\n        this.emit('show');\n        this.isHidden = false;\n        this._element.show();\n        // call shown only if the container has a valid size\n        if (this.height != 0 || this.width != 0) {\n            this.emit('shown');\n        }\n    }\n\n\n    /**\n     * Set the size from within the container. Traverses up\n     * the item tree until it finds a row or column element\n     * and resizes its items accordingly.\n     *\n     * If this container isn't a descendant of a row or column\n     * it returns false\n     * @todo  Rework!!!\n     * @param {Number} width  The new width in pixel\n     * @param {Number} height The new height in pixel\n     *\n     * @returns {Boolean} resizeSuccesful\n     */\n    setSize(width, height) {\n        var rowOrColumn = this.parent,\n            rowOrColumnChild = this,\n            totalPixel,\n            percentage,\n            direction,\n            newSize,\n            delta,\n            i;\n\n        while (!rowOrColumn.isColumn && !rowOrColumn.isRow) {\n            rowOrColumnChild = rowOrColumn;\n            rowOrColumn = rowOrColumn.parent;\n\n\n            /**\n             * No row or column has been found\n             */\n            if (rowOrColumn.isRoot) {\n                return false;\n            }\n        }\n\n        direction = rowOrColumn.isColumn ? \"height\" : \"width\";\n        newSize = direction === \"height\" ? height : width;\n\n        totalPixel = this[direction] * (1 / (rowOrColumnChild.config[direction] / 100));\n        percentage = (newSize / totalPixel) * 100;\n        delta = (rowOrColumnChild.config[direction] - percentage) / (rowOrColumn.contentItems.length - 1);\n\n        for (i = 0; i < rowOrColumn.contentItems.length; i++) {\n            if (rowOrColumn.contentItems[i] === rowOrColumnChild) {\n                rowOrColumn.contentItems[i].config[direction] = percentage;\n            } else {\n                rowOrColumn.contentItems[i].config[direction] += delta;\n            }\n        }\n\n        rowOrColumn.callDownwards('setSize');\n\n        return true;\n    }\n\n\n    /**\n     * Closes the container if it is closable. Can be called by\n     * both the component within at as well as the contentItem containing\n     * it. Emits a close event before the container itself is closed.\n     *\n     * @returns {void}\n     */\n    close() {\n        if (this._config.isClosable) {\n            this.emit('close');\n            this.parent.close();\n        }\n    }\n\n\n    /**\n     * Returns the current state object\n     *\n     * @returns {Object} state\n     */\n    getState() {\n        return this._config.componentState;\n    }\n\n\n    /**\n     * Merges the provided state into the current one\n     *\n     * @param   {Object} state\n     *\n     * @returns {void}\n     */\n    extendState(state) {\n        this.setState($.extend(true, this.getState(), state));\n    }\n\n\n    /**\n     * Notifies the layout manager of a stateupdate\n     *\n     * @param {serialisable} state\n     */\n    setState(state) {\n        this._config.componentState = state;\n        this.parent.emitBubblingEvent('stateChanged');\n    }\n\n\n    /**\n     * Set's the components title\n     *\n     * @param {String} title\n     */\n    setTitle(title) {\n        this.parent.setTitle(title);\n    }\n\n\n    /**\n     * Set's the containers size. Called by the container's component.\n     * To set the size programmatically from within the container please\n     * use the public setSize method\n     *\n     * @param {[Int]} width  in px\n     * @param {[Int]} height in px\n     *\n     * @returns {void}\n     */\n    _$setSize(width, height) {\n        if (width !== this.width || height !== this.height) {\n            this.width = width;\n            this.height = height;\n            $.zepto ? this._contentElement.width(width) : this._contentElement.outerWidth(width);\n            $.zepto ? this._contentElement.height(height) : this._contentElement.outerHeight(height);\n            this.emit('resize');\n        }\n    }\n}\n","import $ from 'jquery'\n/**\n * A specialised GoldenLayout component that binds GoldenLayout container\n * lifecycle events to react components\n *\n * @constructor\n *\n * @param {ItemContainer} container\n * @param {Object} state state is not required for react components\n */\n\n\nexport default class ReactComponentHandler {\n    constructor(container, state) {\n        this._reactComponent = null;\n        this._originalComponentWillUpdate = null;\n        this._container = container;\n        this._initialState = state;\n        this._reactClass = this._getReactClass();\n        this._container.on('open', this._render, this);\n        this._container.on('destroy', this._destroy, this);\n    }\n\n\n\n    /**\n     * Creates the react class and component and hydrates it with\n     * the initial state - if one is present\n     *\n     * By default, react's getInitialState will be used\n     *\n     * @private\n     * @returns {void}\n     */\n    _render() {\n        ReactDOM.render(this._getReactComponent(), this._container.getElement()[0]);\n    }\n\n    /**\n     * Fired by react when the component is created.  Also fired upon destruction (where component is null).\n     * <p>\n     * Note: This callback is used instead of the return from `ReactDOM.render` because\n     *\t   of https://github.com/facebook/react/issues/10309.\n     * </p>\n     *\n     * @private\n     * @arg {React.Ref} component The component instance created by the `ReactDOM.render` call in the `_render` method.\n     * @returns {void}\n     */\n    _gotReactComponent(component) {\n        if (component !== null) {\n            this._reactComponent = component;\n            this._originalComponentWillUpdate = this._reactComponent.componentWillUpdate || function() {};\n            this._reactComponent.componentWillUpdate = this._onUpdate.bind( this );\n            if( this._container.getState() ) {\n                this._reactComponent.setState( this._container.getState() );\n            }\n        }\n    }\n    \n    /**\n     * Removes the component from the DOM and thus invokes React's unmount lifecycle\n     *\n     * @private\n     * @returns {void}\n     */\n    _destroy() {\n        ReactDOM.unmountComponentAtNode(this._container.getElement()[0]);\n        this._container.off('open', this._render, this);\n        this._container.off('destroy', this._destroy, this);\n    }\n\n    /**\n     * Hooks into React's state management and applies the componentstate\n     * to GoldenLayout\n     *\n     * @private\n     * @returns {void}\n     */\n    _onUpdate(nextProps, nextState) {\n        this._container.setState(nextState);\n        this._originalComponentWillUpdate.call(this._reactComponent, nextProps, nextState);\n    }\n\n    /**\n     * Retrieves the react class from GoldenLayout's registry\n     *\n     * @private\n     * @returns {React.Class}\n     */\n    _getReactClass() {\n        var componentName = this._container._config.component;\n        var reactClass;\n\n        if (!componentName) {\n            throw new Error('No react component name. type: react-component needs a field `component`');\n        }\n\n        reactClass = this._container.layoutManager.getComponent(this._container._config);\n\n        if (!reactClass) {\n            throw new Error('React component \"' + componentName + '\" not found. ' +\n                'Please register all components with GoldenLayout using `registerComponent(name, component)`');\n        }\n\n        return reactClass;\n    }\n\n    /**\n     * Copies and extends the properties array and returns the React element\n     *\n     * @private\n     * @returns {React.Element}\n     */\n    _getReactComponent() {\n        var defaultProps = {\n            glEventHub: this._container.layoutManager.eventHub,\n            glContainer: this._container,\n            ref: this._gotReactComponent.bind(this),\n        };\n        var props = $.extend(defaultProps, this._container._config.props);\n        return React.createElement(this._reactClass, props);\n    }\n}\n","import AbstractContentItem from '../items/AbstractContentItem'\nimport ItemContainer from '../container/ItemContainer'\nimport ReactComponentHandler from '../utils/ReactComponentHandler'\nimport $ from 'jquery'\n/**\n * @param {[type]} layoutManager [description]\n * @param {[type]} config      [description]\n * @param {[type]} parent        [description]\n */\n\n\nexport default class Component extends AbstractContentItem {\n    constructor(layoutManager, config, parent) {\n\n        super(layoutManager, config, parent);\n\n        var ComponentConstructor = layoutManager.isReactConfig(config) ? ReactComponentHandler : layoutManager.getComponent(config),\n            componentConfig = $.extend(true, {}, this.config.componentState || {});\n\n        componentConfig.componentName = this.config.componentName;\n        this.componentName = this.config.componentName;\n\n        if (this.config.title === '') {\n            this.config.title = this.config.componentName;\n        }\n\n        this.isComponent = true;\n        this.container = new ItemContainer(this.config, this, layoutManager);\n        this.instance = new ComponentConstructor(this.container, componentConfig);\n        this.element = this.container._element;\n    }\n\n    close() {\n        this.parent.removeChild(this);\n    }\n\n    setSize() {\n        if (this.element.css('display') !== 'none') {\n            // Do not update size of hidden components to prevent unwanted reflows\n            this.container._$setSize(this.element.width(), this.element.height());\n        }\n    }\n\n    _$init() {\n        AbstractContentItem.prototype._$init.call(this);\n        this.container.emit('open');\n    }\n\n    _$hide() {\n        this.container.hide();\n        AbstractContentItem.prototype._$hide.call(this);\n    }\n\n    _$show() {\n        this.container.show();\n        AbstractContentItem.prototype._$show.call(this);\n    }\n\n    _$shown() {\n        this.container.shown();\n        AbstractContentItem.prototype._$shown.call(this);\n    }\n\n    _$destroy() {\n        this.container.emit('destroy', this);\n        AbstractContentItem.prototype._$destroy.call(this);\n    }\n\n    /**\n     * Dragging onto a component directly is not an option\n     *\n     * @returns null\n     */\n    _$getArea() {\n        return null;\n    }\n}\n","import EventEmitter from '../utils/EventEmitter'\nimport ConfigMinifier from '../utils/ConfigMinifier'\nimport {\n    fnBind,\n    getUniqueId,\n} from '../utils/utils'\nimport $ from 'jquery'\n\n/**\n * Pops a content item out into a new browser window.\n * This is achieved by\n *\n *    - Creating a new configuration with the content item as root element\n *    - Serializing and minifying the configuration\n *    - Opening the current window's URL with the configuration as a GET parameter\n *    - GoldenLayout when opened in the new window will look for the GET parameter\n *      and use it instead of the provided configuration\n *\n * @param {Object} config GoldenLayout item config\n * @param {Object} dimensions A map with width, height, top and left\n * @param {String} parentId The id of the element the item will be appended to on popIn\n * @param {Number} indexInParent The position of this element within its parent\n * @param {lm.LayoutManager} layoutManager\n */\n\n\nexport default class BrowserPopout extends EventEmitter {\n    constructor(config, dimensions, parentId, indexInParent, layoutManager) {\n\n        super();\n        \n        this.isInitialised = false;\n\n        this._config = config;\n        this._dimensions = dimensions;\n        this._parentId = parentId;\n        this._indexInParent = indexInParent;\n        this._layoutManager = layoutManager;\n        this._popoutWindow = null;\n        this._id = null;\n        this._createWindow();\n    }\n\n    toConfig() {\n        if (this.isInitialised === false) {\n            throw new Error('Can\\'t create config, layout not yet initialised');\n        }\n        return {\n            dimensions: {\n                width: this.getGlInstance().width,\n                height: this.getGlInstance().height,\n                left: this._popoutWindow.screenX || this._popoutWindow.screenLeft,\n                top: this._popoutWindow.screenY || this._popoutWindow.screenTop\n            },\n            content: this.getGlInstance().toConfig().content,\n            parentId: this._parentId,\n            indexInParent: this._indexInParent\n        };\n    }\n\n    getGlInstance() {\n        return this._popoutWindow.__glInstance;\n    }\n\n    getWindow() {\n        return this._popoutWindow;\n    }\n\n    close() {\n        if (this.getGlInstance()) {\n            this.getGlInstance()._$closeWindow();\n        } else {\n            try {\n                this.getWindow().close();\n            } catch (e) {\n                //\n            }\n        }\n    }\n\n    /**\n     * Returns the popped out item to its original position. If the original\n     * parent isn't available anymore it falls back to the layout's topmost element\n     */\n    popIn() {\n        var childConfig,\n            parentItem,\n            index = this._indexInParent;\n\n        if (this._parentId) {\n\n            /*\n             * The $.extend call seems a bit pointless, but it's crucial to\n             * copy the config returned by this.getGlInstance().toConfig()\n             * onto a new object. Internet Explorer keeps the references\n             * to objects on the child window, resulting in the following error\n             * once the child window is closed:\n             *\n             * The callee (server [not server application]) is not available and disappeared\n             */\n            childConfig = $.extend(true, {}, this.getGlInstance().toConfig()).content[0];\n            parentItem = this._layoutManager.root.getItemsById(this._parentId)[0];\n\n            /*\n             * Fallback if parentItem is not available. Either add it to the topmost\n             * item or make it the topmost item if the layout is empty\n             */\n            if (!parentItem) {\n                if (this._layoutManager.root.contentItems.length > 0) {\n                    parentItem = this._layoutManager.root.contentItems[0];\n                } else {\n                    parentItem = this._layoutManager.root;\n                }\n                index = 0;\n            }\n        }\n\n        parentItem.addChild(childConfig, this._indexInParent);\n        this.close();\n    }\n\n    /**\n     * Creates the URL and window parameter\n     * and opens a new window\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _createWindow() {\n        var checkReadyInterval,\n            url = this._createUrl(),\n\n            /**\n             * Bogus title to prevent re-usage of existing window with the\n             * same title. The actual title will be set by the new window's\n             * GoldenLayout instance if it detects that it is in subWindowMode\n             */\n            title = Math.floor(Math.random() * 1000000).toString(36),\n\n            /**\n             * The options as used in the window.open string\n             */\n            options = this._serializeWindowOptions({\n                width: this._dimensions.width,\n                height: this._dimensions.height,\n                innerWidth: this._dimensions.width,\n                innerHeight: this._dimensions.height,\n                menubar: 'no',\n                toolbar: 'no',\n                location: 'no',\n                personalbar: 'no',\n                resizable: 'yes',\n                scrollbars: 'no',\n                status: 'no'\n            });\n\n        this._popoutWindow = window.open(url, title, options);\n\n        if (!this._popoutWindow) {\n            if (this._layoutManager.config.settings.blockedPopoutsThrowError === true) {\n                var error = new Error('Popout blocked');\n                error.type = 'popoutBlocked';\n                throw error;\n            } else {\n                return;\n            }\n        }\n\n        $(this._popoutWindow)\n            .on('load', fnBind(this._positionWindow, this))\n            .on('unload beforeunload', fnBind(this._onClose, this));\n\n        /**\n         * Polling the childwindow to find out if GoldenLayout has been initialised\n         * doesn't seem optimal, but the alternatives - adding a callback to the parent\n         * window or raising an event on the window object - both would introduce knowledge\n         * about the parent to the child window which we'd rather avoid\n         */\n        checkReadyInterval = setInterval(fnBind(function() {\n            if (this._popoutWindow.__glInstance && this._popoutWindow.__glInstance.isInitialised) {\n                this._onInitialised();\n                clearInterval(checkReadyInterval);\n            }\n        }, this), 10);\n    }\n\n    /**\n     * Serialises a map of key:values to a window options string\n     *\n     * @param   {Object} windowOptions\n     *\n     * @returns {String} serialised window options\n     */\n    _serializeWindowOptions(windowOptions) {\n        var windowOptionsString = [],\n            key;\n\n        for (key in windowOptions) {\n            windowOptionsString.push(key + '=' + windowOptions[key]);\n        }\n\n        return windowOptionsString.join(',');\n    }\n\n    /**\n     * Creates the URL for the new window, including the\n     * config GET parameter\n     *\n     * @returns {String} URL\n     */\n    _createUrl() {\n        var config = {\n                content: this._config\n            },\n            storageKey = 'gl-window-config-' + getUniqueId(),\n            urlParts;\n\n        config = (new ConfigMinifier()).minifyConfig(config);\n\n        try {\n            localStorage.setItem(storageKey, JSON.stringify(config));\n        } catch (e) {\n            throw new Error('Error while writing to localStorage ' + e.toString());\n        }\n\n        urlParts = document.location.href.split('?');\n\n        // URL doesn't contain GET-parameters\n        if (urlParts.length === 1) {\n            return urlParts[0] + '?gl-window=' + storageKey;\n\n            // URL contains GET-parameters\n        } else {\n            return document.location.href + '&gl-window=' + storageKey;\n        }\n    }\n\n    /**\n     * Move the newly created window roughly to\n     * where the component used to be.\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _positionWindow() {\n        this._popoutWindow.moveTo(this._dimensions.left, this._dimensions.top);\n        this._popoutWindow.focus();\n    }\n\n    /**\n     * Callback when the new window is opened and the GoldenLayout instance\n     * within it is initialised\n     *\n     * @returns {void}\n     */\n    _onInitialised() {\n        this.isInitialised = true;\n        this.getGlInstance().on('popIn', this.popIn, this);\n        this.emit('initialised');\n    }\n\n    /**\n     * Invoked 50ms after the window unload event\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _onClose() {\n        setTimeout(fnBind(this.emit, this, ['closed']), 50);\n    }\n}\n","import DragListener from '../utils/DragListener'\nimport DragProxy from '../controls/DragProxy'\nimport {\n    isFunction\n} from '../utils/utils'\nimport $ from 'jquery'\n\n/**\n * Allows for any DOM item to create a component on drag\n * start tobe dragged into the Layout\n *\n * @param {jQuery element} element\n * @param {Object} itemConfig the configuration for the contentItem that will be created\n * @param {LayoutManager} layoutManager\n *\n * @constructor\n */\nexport default class DragSource {\n    constructor(element, itemConfig, layoutManager) {\n        this._element = element;\n        this._itemConfig = itemConfig;\n        this._layoutManager = layoutManager;\n        this._dragListener = null;\n\n        this._createDragListener();\n    }\n\n\t/**\n\t * Disposes of the drag listeners so the drag source is not usable any more.\n\t *\n\t * @returns {void}\n\t */\n\tdestroy() {\n\t\tthis._removeDragListener();\n    }\n    \n    /**\n     * Called initially and after every drag\n     *\n     * @returns {void}\n     */\n    _createDragListener() {\n        this._removeDragListener();\n\n        this._dragListener = new DragListener(this._element);\n        this._dragListener.on('dragStart', this._onDragStart, this);\n        this._dragListener.on('dragStop', this._createDragListener, this);\n    }\n\n    /**\n     * Callback for the DragListener's dragStart event\n     *\n     * @param   {int} x the x position of the mouse on dragStart\n     * @param   {int} y the x position of the mouse on dragStart\n     *\n     * @returns {void}\n     */\n    _onDragStart(x, y) {\n        var itemConfig = this._itemConfig;\n        if (isFunction(itemConfig)) {\n            itemConfig = itemConfig();\n        }\n        var contentItem = this._layoutManager._$normalizeContentItem($.extend(true, {}, itemConfig)),\n            dragProxy = new DragProxy(x, y, this._dragListener, this._layoutManager, contentItem, null);\n\n        this._layoutManager.transitionIndicator.transitionElements(this._element, dragProxy.element);\n    }\n\n    /**\n\t * Called after every drag and when the drag source is being disposed of.\n\t *\n\t * @returns {void}\n\t */\n\t_removeDragListener() {\n\t\tif( this._dragListener !== null ) {\n\t\t\tthis._dragListener.destroy();\n\t\t}\n\t}\n}\n","import $ from 'jquery'\n\nconst _template = '<div class=\"lm_dropTargetIndicator\"><div class=\"lm_inner\"></div></div>'\n\n\nexport default class DropTargetIndicator {\n\n    constructor() {\n        this.element = $(_template);\n        $(document.body).append(this.element);\n    }\n\n    destroy() {\n        this.element.remove();\n    }\n\n    highlight(x1, y1, x2, y2) {\n        this.highlightArea({\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        });\n    }\n\n    highlightArea(area) {\n        this.element.css({\n            left: area.x1,\n            top: area.y1,\n            width: area.x2 - area.x1,\n            height: area.y2 - area.y1\n        }).show();\n    }\n\n    hide() {\n        this.element.hide();\n    }\n}\n","import {\n    now,\n    animFrame,\n    fnBind\n} from '../utils/utils'\nimport $ from 'jquery'\n\n\nexport default class TransitionIndicator {\n    constructor() {\n        this._element = $('<div class=\"lm_transition_indicator\"></div>');\n        $(document.body).append(this._element);\n\n        this._toElement = null;\n        this._fromDimensions = null;\n        this._totalAnimationDuration = 200;\n        this._animationStartTime = null;\n    }\n\n    destroy() {\n        this._element.remove();\n    }\n\n    transitionElements(fromElement, toElement) {\n        /**\n         * TODO - This is not quite as cool as expected. Review.\n         */\n        return;\n        // this._toElement = toElement;\n        // this._animationStartTime = now();\n        // this._fromDimensions = this._measure(fromElement);\n        // this._fromDimensions.opacity = 0.8;\n        // this._element.show().css(this._fromDimensions);\n        // animFrame(fnBind(this._nextAnimationFrame, this));\n    }\n\n    _nextAnimationFrame() {\n        var toDimensions = this._measure(this._toElement),\n            animationProgress = (now() - this._animationStartTime) / this._totalAnimationDuration,\n            currentFrameStyles = {},\n            cssProperty;\n\n        if (animationProgress >= 1) {\n            this._element.hide();\n            return;\n        }\n\n        toDimensions.opacity = 0;\n\n        for (cssProperty in this._fromDimensions) {\n            currentFrameStyles[cssProperty] = this._fromDimensions[cssProperty] +\n                (toDimensions[cssProperty] - this._fromDimensions[cssProperty]) *\n                animationProgress;\n        }\n\n        this._element.css(currentFrameStyles);\n        animFrame(fnBind(this._nextAnimationFrame, this));\n    }\n\n    _measure(element) {\n        var offset = element.offset();\n\n        return {\n            left: offset.left,\n            top: offset.top,\n            width: element.outerWidth(),\n            height: element.outerHeight()\n        };\n    }\n}\n","const defaultConfig = {\n    openPopouts: [],\n    settings: {\n        hasHeaders: true,\n        constrainDragToContainer: true,\n        reorderEnabled: true,\n        selectionEnabled: false,\n        popoutWholeStack: false,\n        blockedPopoutsThrowError: true,\n        closePopoutsOnUnload: true,\n        showPopoutIcon: true,\n        showMaximiseIcon: true,\n        showCloseIcon: true,\n        responsiveMode: 'onload', // Can be onload, always, or none.\n        tabOverlapAllowance: 0, // maximum pixel overlap per tab\n        reorderOnTabMenuClick: true,\n        tabControlOffset: 10\n    },\n    dimensions: {\n        borderWidth: 5,\n        borderGrabWidth: 15,\n        minItemHeight: 10,\n        minItemWidth: 10,\n        headerHeight: 20,\n        dragProxyWidth: 300,\n        dragProxyHeight: 200\n    },\n    labels: {\n        close: 'close',\n        maximise: 'maximise',\n        minimise: 'minimise',\n        popout: 'open in new window',\n        popin: 'pop in',\n        tabDropdown: 'additional tabs'\n    }\n}\n\nexport default defaultConfig\n","import EventEmitter from './utils/EventEmitter'\nimport ConfigMinifier from './utils/ConfigMinifier'\nimport EventHub from './utils/EventHub'\n\nimport Root from './items/Root'\nimport RowOrColumn from './items/RowOrColumn'\nimport Stack from './items/Stack'\nimport Component from './items/Component'\nimport AbstractContentItem from './items/AbstractContentItem'\n\nimport BrowserPopout from './controls/BrowserPopout'\nimport DragSource from './controls/DragSource'\nimport DropTargetIndicator from './controls/DropTargetIndicator'\nimport TransitionIndicator from './controls/TransitionIndicator'\n\nimport ConfigurationError from './errors/ConfigurationError'\nimport defaultConfig from './config/defaultConfig'\n\nimport {\n    fnBind,\n    objectKeys,\n    copy,\n    getUniqueId,\n    indexOf,\n    isFunction,\n    stripTags,\n    getQueryStringParam\n} from './utils/utils'\n\nimport $ from 'jquery'\n\nexport const REACT_COMPONENT_ID = 'lm-react-component'\n\n/**\n * The main class that will be exposed as GoldenLayout.\n *\n * @public\n * @constructor\n * @param {GoldenLayout config} config\n * @param {[DOM element container]} container Can be a jQuery selector string or a Dom element. Defaults to body\n *\n * @returns {VOID}\n */\n\n\nexport default class LayoutManager extends EventEmitter {\n    constructor(config, container) {        \n        super();\n\n        this.isInitialised = false;\n        this._isFullPage = false;\n        this._resizeTimeoutId = null;\n        this._components = {};\n        this._itemAreas = [];\n        this._resizeFunction = fnBind(this._onResize, this);\n        this._unloadFunction = fnBind(this._onUnload, this);\n        this._maximisedItem = null;\n        this._maximisePlaceholder = $('<div class=\"lm_maximise_place\"></div>');\n        this._creationTimeoutPassed = false;\n        this._subWindowsCreated = false;\n        this._dragSources = [];\n        this._updatingColumnsResponsive = false;\n        this._firstLoad = true;\n\n        this.width = null;\n        this.height = null;\n        this.root = null;\n        this.openPopouts = [];\n        this.selectedItem = null;\n        this.isSubWindow = false;\n        this.eventHub = new EventHub(this);\n        this.config = this._createConfig(config);\n        this.container = container;\n        this.dropTargetIndicator = null;\n        this.transitionIndicator = null;\n        this.tabDropPlaceholder = $('<div class=\"lm_drop_tab_placeholder\"></div>');\n\n        if (this.isSubWindow === true) {\n            $('body').css('visibility', 'hidden');\n        }\n\n        this._typeToItem = {\n            'column': fnBind(RowOrColumn, this, [true]),\n            'row': fnBind(RowOrColumn, this, [false]),\n            'stack': Stack,\n            'component': Component\n        };\n    }\n\n    /**\n     * Takes a GoldenLayout configuration object and\n     * replaces its keys and values recursively with\n     * one letter codes\n     *\n     * @static\n     * @public\n     * @param   {Object} config A GoldenLayout config object\n     *\n     * @returns {Object} minified config\n     */\n    minifyConfig(config) {\n        return (new ConfigMinifier()).minifyConfig(config);\n    }\n\n    /**\n     * Takes a configuration Object that was previously minified\n     * using minifyConfig and returns its original version\n     *\n     * @static\n     * @public\n     * @param   {Object} minifiedConfig\n     *\n     * @returns {Object} the original configuration\n     */\n    unminifyConfig(config) {\n        return (new ConfigMinifier()).unminifyConfig(config);\n    }\n\n\n    /**\n     * Register a component with the layout manager. If a configuration node\n     * of type component is reached it will look up componentName and create the\n     * associated component\n     *\n     *  {\n     *    type: \"component\",\n     *    componentName: \"EquityNewsFeed\",\n     *    componentState: { \"feedTopic\": \"us-bluechips\" }\n     *  }\n     *\n     * @public\n     * @param   {String} name\n     * @param   {Function} constructor\n     *\n     * @returns {void}\n     */\n    registerComponent(name, constructor) {\n        if (typeof constructor !== 'function') {\n            throw new Error('Please register a constructor function');\n        }\n\n        if (this._components[name] !== undefined) {\n            throw new Error('Component ' + name + ' is already registered');\n        }\n\n        this._components[name] = constructor;\n    }\n\n    /**\n     * Register a component function with the layout manager. This function should\n     * return a constructor for a component based on a config.  If undefined is returned, \n     * and no component has been registered under that name using registerComponent, an \n     * error will be thrown.\n     *\n     * @public\n     * @param   {Function} callback\n     *\n     * @returns {void}\n     */\n    registerComponentFunction(callback) {\n        if (typeof callback !== 'function') {\n            throw new Error('Please register a callback function');\n        }\n\n        if (this._componentFunction !== undefined) {\n            console.warn('Multiple component functions are being registered.  Only the final registered function will be used.')\n        }\n\n        this._componentFunction = callback;\n    }\n\n    /**\n     * Creates a layout configuration object based on the the current state\n     *\n     * @public\n     * @returns {Object} GoldenLayout configuration\n     */\n    toConfig(root) {\n        var config, next, i;\n\n        if (this.isInitialised === false) {\n            throw new Error('Can\\'t create config, layout not yet initialised');\n        }\n\n        if (root && !(root instanceof AbstractContentItem)) {\n            throw new Error('Root must be a ContentItem');\n        }\n\n        /*\n         * settings & labels\n         */\n        config = {\n            settings: copy({}, this.config.settings),\n            dimensions: copy({}, this.config.dimensions),\n            labels: copy({}, this.config.labels)\n        };\n\n        /*\n         * Content\n         */\n        config.content = [];\n        next = function(configNode, item) {\n            var key, i;\n\n            for (key in item.config) {\n                if (key !== 'content') {\n                    configNode[key] = item.config[key];\n                }\n            }\n\n            if (item.contentItems.length) {\n                configNode.content = [];\n\n                for (i = 0; i < item.contentItems.length; i++) {\n                    configNode.content[i] = {};\n                    next(configNode.content[i], item.contentItems[i]);\n                }\n            }\n        };\n\n        if (root) {\n            next(config, {\n                contentItems: [root]\n            });\n        } else {\n            next(config, this.root);\n        }\n\n        /*\n         * Retrieve config for subwindows\n         */\n        this._$reconcilePopoutWindows();\n        config.openPopouts = [];\n        for (i = 0; i < this.openPopouts.length; i++) {\n            config.openPopouts.push(this.openPopouts[i].toConfig());\n        }\n\n        /*\n         * Add maximised item\n         */\n        config.maximisedItemId = this._maximisedItem ? '__glMaximised' : null;\n        return config;\n    }\n\n    /**\n     * Returns a previously registered component.  Attempts to utilize registered \n     * component by name first, then falls back to the component function.  If either\n     * lack a response for what the component should be, it throws an error.\n     *\n     * @public\n     * @param {Object} config - The item config\n     * \n     * @returns {Function}\n     */\n    getComponent(config) {\n        const name = this.getComponentNameFromConfig(config)\n        let componentToUse = this._components[name]\n        if (this._componentFunction !== undefined) {\n            componentToUse = componentToUse || this._componentFunction({config})\n        }\n        if (componentToUse === undefined) {\n            throw new ConfigurationError('Unknown component \"' + name + '\"');\n        }\n\n        return componentToUse;\n    }\n\n    /**\n     * Creates the actual layout. Must be called after all initial components\n     * are registered. Recurses through the configuration and sets up\n     * the item tree.\n     *\n     * If called before the document is ready it adds itself as a listener\n     * to the document.ready event\n     *\n     * @public\n     *\n     * @returns {void}\n     */\n    init() {\n\n        /**\n         * Create the popout windows straight away. If popouts are blocked\n         * an error is thrown on the same 'thread' rather than a timeout and can\n         * be caught. This also prevents any further initilisation from taking place.\n         */\n        if (this._subWindowsCreated === false) {\n            this._createSubWindows();\n            this._subWindowsCreated = true;\n        }\n\n\n        /**\n         * If the document isn't ready yet, wait for it.\n         */\n        if (document.readyState === 'loading' || document.body === null) {\n            $(document).ready(fnBind(this.init, this));\n            return;\n        }\n\n        /**\n         * If this is a subwindow, wait a few milliseconds for the original\n         * page's js calls to be executed, then replace the bodies content\n         * with GoldenLayout\n         */\n        if (this.isSubWindow === true && this._creationTimeoutPassed === false) {\n            setTimeout(fnBind(this.init, this), 7);\n            this._creationTimeoutPassed = true;\n            return;\n        }\n\n        if (this.isSubWindow === true) {\n            this._adjustToWindowMode();\n        }\n\n        this._setContainer();\n        this.dropTargetIndicator = new DropTargetIndicator(this.container);\n        this.transitionIndicator = new TransitionIndicator();\n        this.updateSize();\n        this._create(this.config);\n        this._bindEvents();\n        this.isInitialised = true;\n        this._adjustColumnsResponsive();\n        this.emit('initialised');\n    }\n\n    /**\n     * Updates the layout managers size\n     *\n     * @public\n     * @param   {[int]} width  height in pixels\n     * @param   {[int]} height width in pixels\n     *\n     * @returns {void}\n     */\n    updateSize(width, height) {\n        if (arguments.length === 2) {\n            this.width = width;\n            this.height = height;\n        } else {\n            this.width = this.container.width();\n            this.height = this.container.height();\n        }\n\n        if (this.isInitialised === true) {\n            this.root.callDownwards('setSize', [this.width, this.height]);\n\n            if (this._maximisedItem) {\n                this._maximisedItem.element.width(this.container.width());\n                this._maximisedItem.element.height(this.container.height());\n                this._maximisedItem.callDownwards('setSize');\n            }\n\n            this._adjustColumnsResponsive();\n        }\n    }\n\n    /**\n     * Destroys the LayoutManager instance itself as well as every ContentItem\n     * within it. After this is called nothing should be left of the LayoutManager.\n     *\n     * @public\n     * @returns {void}\n     */\n    destroy() {\n        if (this.isInitialised === false) {\n            return;\n        }\n        this._onUnload();\n        $(window).off('resize', this._resizeFunction);\n        $(window).off('unload beforeunload', this._unloadFunction);\n        this.root.callDownwards('_$destroy', [], true);\n        this.root.contentItems = [];\n        this.tabDropPlaceholder.remove();\n        this.dropTargetIndicator.destroy();\n        this.transitionIndicator.destroy();\n        this.eventHub.destroy();\n\n        this._dragSources.forEach(function(dragSource) {\n            dragSource._dragListener.destroy();\n            dragSource._element = null;\n            dragSource._itemConfig = null;\n            dragSource._dragListener = null;\n        });\n        this._dragSources = [];\n    }\n\n    /**\n     * Returns whether or not the config corresponds to a react component or a normal component.\n     * \n     * At some point the type is mutated, but the componentName should then correspond to the\n     * REACT_COMPONENT_ID.\n     * \n     * @param {Object} config ItemConfig\n     * \n     * @returns {Boolean}\n     */\n\n    isReactConfig(config) {\n        return config.type === 'react-component' || config.componentName === REACT_COMPONENT_ID\n    }\n\n    /**\n     * Returns the name of the component for the config, taking into account whether it's a react component or not.\n     * \n     * @param {Object} config ItemConfig\n     * \n     * @returns {String}\n     */\n\n    getComponentNameFromConfig(config) {\n        if (this.isReactConfig(config)) {\n            return config.component\n        }\n        return config.componentName\n    }\n\n    /**\n     * Recursively creates new item tree structures based on a provided\n     * ItemConfiguration object\n     *\n     * @public\n     * @param   {Object} config ItemConfig\n     * @param   {[ContentItem]} parent The item the newly created item should be a child of\n     *\n     * @returns {ContentItem}\n     */\n    createContentItem(config, parent) {\n        var typeErrorMsg, contentItem;\n\n        if (typeof config.type !== 'string') {\n            throw new ConfigurationError('Missing parameter \\'type\\'', config);\n        }\n\n        if (this.isReactConfig(config)) {\n            config.type = 'component';\n            config.componentName = REACT_COMPONENT_ID;\n        }\n\n        if (!this._typeToItem[config.type]) {\n            typeErrorMsg = 'Unknown type \\'' + config.type + '\\'. ' +\n                'Valid types are ' + objectKeys(this._typeToItem).join(',');\n\n            throw new ConfigurationError(typeErrorMsg);\n        }\n\n\n        /**\n         * We add an additional stack around every component that's not within a stack anyways.\n         */\n        if (\n            // If this is a component\n            config.type === 'component' &&\n\n            // and it's not already within a stack\n            !(parent instanceof Stack) &&\n\n            // and we have a parent\n            !!parent &&\n\n            // and it's not the topmost item in a new window\n            !(this.isSubWindow === true && parent instanceof Root)\n        ) {\n            config = {\n                type: 'stack',\n                width: config.width,\n                height: config.height,\n                content: [config]\n            };\n        }\n\n        contentItem = new this._typeToItem[config.type](this, config, parent);\n        return contentItem;\n    }\n\n    /**\n     * Creates a popout window with the specified content and dimensions\n     *\n     * @param   {Object|lm.itemsAbstractContentItem} configOrContentItem\n     * @param   {[Object]} dimensions A map with width, height, left and top\n     * @param    {[String]} parentId the id of the element this item will be appended to\n     *                             when popIn is called\n     * @param    {[Number]} indexInParent The position of this item within its parent element\n     \n     * @returns {BrowserPopout}\n     */\n    createPopout(configOrContentItem, dimensions, parentId, indexInParent) {\n        var config = configOrContentItem,\n            isItem = configOrContentItem instanceof AbstractContentItem,\n            self = this,\n            windowLeft,\n            windowTop,\n            offset,\n            parent,\n            child,\n            browserPopout;\n\n        parentId = parentId || null;\n\n        if (isItem) {\n            config = this.toConfig(configOrContentItem).content;\n            parentId = getUniqueId();\n\n            /**\n             * If the item is the only component within a stack or for some\n             * other reason the only child of its parent the parent will be destroyed\n             * when the child is removed.\n             *\n             * In order to support this we move up the tree until we find something\n             * that will remain after the item is being popped out\n             */\n            parent = configOrContentItem.parent;\n            child = configOrContentItem;\n            while (parent.contentItems.length === 1 && !parent.isRoot) {\n                parent = parent.parent;\n                child = child.parent;\n            }\n\n            parent.addId(parentId);\n            if (isNaN(indexInParent)) {\n                indexInParent = indexOf(child, parent.contentItems);\n            }\n        } else {\n            if (!(config instanceof Array)) {\n                config = [config];\n            }\n        }\n\n\n        if (!dimensions && isItem) {\n            windowLeft = window.screenX || window.screenLeft;\n            windowTop = window.screenY || window.screenTop;\n            offset = configOrContentItem.element.offset();\n\n            dimensions = {\n                left: windowLeft + offset.left,\n                top: windowTop + offset.top,\n                width: configOrContentItem.element.width(),\n                height: configOrContentItem.element.height()\n            };\n        }\n\n        if (!dimensions && !isItem) {\n            dimensions = {\n                left: window.screenX || window.screenLeft + 20,\n                top: window.screenY || window.screenTop + 20,\n                width: 500,\n                height: 309\n            };\n        }\n\n        if (isItem) {\n            configOrContentItem.remove();\n        }\n\n        browserPopout = new BrowserPopout(config, dimensions, parentId, indexInParent, this);\n\n        browserPopout.on('initialised', function() {\n            self.emit('windowOpened', browserPopout);\n        });\n\n        browserPopout.on('closed', function() {\n            self._$reconcilePopoutWindows();\n        });\n\n        this.openPopouts.push(browserPopout);\n\n        return browserPopout;\n    }\n\n    /**\n     * Attaches DragListener to any given DOM element\n     * and turns it into a way of creating new ContentItems\n     * by 'dragging' the DOM element into the layout\n     *\n     * @param   {jQuery DOM element} element\n     * @param   {Object|Function} itemConfig for the new item to be created, or a function which will provide it\n     *\n     * @returns {DragSource}  an opaque object that identifies the DOM element\n\t *          and the attached itemConfig. This can be used in\n\t *          removeDragSource() later to get rid of the drag listeners.\n     */\n    createDragSource(element, itemConfig) {\n        this.config.settings.constrainDragToContainer = false;\n        var dragSource = new DragSource($(element), itemConfig, this);\n        this._dragSources.push(dragSource);\n\n        return dragSource;\n    }\n\n    /**\n\t * Removes a DragListener added by createDragSource() so the corresponding\n\t * DOM element is not a drag source any more.\n\t *\n\t * @param   {jQuery DOM element} element\n\t *\n\t * @returns {void}\n\t */\n\tremoveDragSource(dragSource) {\n\t\tdragSource.destroy();\n\t\tlm.utils.removeFromArray( dragSource, this._dragSources );\n\t}\n\n    /**\n     * Programmatically selects an item. This deselects\n     * the currently selected item, selects the specified item\n     * and emits a selectionChanged event\n     *\n     * @param   {AbstractContentItem} item#\n     * @param   {[Boolean]} _$silent Wheather to notify the item of its selection\n     * @event    selectionChanged\n     *\n     * @returns {VOID}\n     */\n    selectItem(item, _$silent) {\n\n        if (this.config.settings.selectionEnabled !== true) {\n            throw new Error('Please set selectionEnabled to true to use this feature');\n        }\n\n        if (item === this.selectedItem) {\n            return;\n        }\n\n        if (this.selectedItem !== null) {\n            this.selectedItem.deselect();\n        }\n\n        if (item && _$silent !== true) {\n            item.select();\n        }\n\n        this.selectedItem = item;\n\n        this.emit('selectionChanged', item);\n    }\n\n    /*************************\n     * PACKAGE PRIVATE\n     *************************/\n    _$maximiseItem(contentItem) {\n        if (this._maximisedItem !== null) {\n            this._$minimiseItem(this._maximisedItem);\n        }\n        this._maximisedItem = contentItem;\n        contentItem.on( 'beforeItemDestroyed', this._$cleanupBeforeMaximisedItemDestroyed, this );\n        this._maximisedItem.addId('__glMaximised');\n        contentItem.element.addClass('lm_maximised');\n        contentItem.element.after(this._maximisePlaceholder);\n        this.root.element.prepend(contentItem.element);\n        contentItem.element.width(this.container.width());\n        contentItem.element.height(this.container.height());\n        contentItem.callDownwards('setSize');\n        this._maximisedItem.emit('maximised');\n        this.emit('stateChanged');\n    }\n\n    _$minimiseItem(contentItem) {\n        contentItem.element.removeClass('lm_maximised');\n        contentItem.removeId('__glMaximised');\n        this._maximisePlaceholder.after(contentItem.element);\n        this._maximisePlaceholder.remove();\n        contentItem.parent.callDownwards('setSize');\n        this._maximisedItem = null;\n        contentItem.off( 'beforeItemDestroyed', this._$cleanupBeforeMaximisedItemDestroyed, this );\n        contentItem.emit('minimised');\n        this.emit('stateChanged');\n    }\n\n    _$cleanupBeforeMaximisedItemDestroyed() {\n\t\tif (this._maximisedItem === event.origin) {\n\t\t\tthis._maximisedItem.off( 'beforeItemDestroyed', this._$cleanupBeforeMaximisedItemDestroyed, this );\n\t\t\tthis._maximisedItem = null;\n\t\t}\n    }\n    \n    /**\n     * This method is used to get around sandboxed iframe restrictions.\n     * If 'allow-top-navigation' is not specified in the iframe's 'sandbox' attribute\n     * (as is the case with codepens) the parent window is forbidden from calling certain\n     * methods on the child, such as window.close() or setting document.location.href.\n     *\n     * This prevented GoldenLayout popouts from popping in in codepens. The fix is to call\n     * _$closeWindow on the child window's gl instance which (after a timeout to disconnect\n     * the invoking method from the close call) closes itself.\n     *\n     * @packagePrivate\n     *\n     * @returns {void}\n     */\n    _$closeWindow() {\n        window.setTimeout(function() {\n            window.close();\n        }, 1);\n    }\n\n    _$getArea(x, y) {\n        var i, area, smallestSurface = Infinity,\n            mathingArea = null;\n\n        for (i = 0; i < this._itemAreas.length; i++) {\n            area = this._itemAreas[i];\n\n            if (\n                x > area.x1 &&\n                x < area.x2 &&\n                y > area.y1 &&\n                y < area.y2 &&\n                smallestSurface > area.surface\n            ) {\n                smallestSurface = area.surface;\n                mathingArea = area;\n            }\n        }\n\n        return mathingArea;\n    }\n\n    _$createRootItemAreas() {\n        var areaSize = 50;\n        var sides = {\n            y2: 'y1',\n            x2: 'x1',\n            y1: 'y2',\n            x1: 'x2'\n        };\n        for (var side in sides) {\n            var area = this.root._$getArea();\n            area.side = side;\n            if (sides[side][1] === '2' )\n                area[side] = area[sides[side]] - areaSize;\n            else\n                area[side] = area[sides[side]] + areaSize;\n            area.surface = (area.x2 - area.x1) * (area.y2 - area.y1);\n            this._itemAreas.push(area);\n        }\n    }\n\n    _$calculateItemAreas() {\n        var i, area, allContentItems = this._getAllContentItems();\n        this._itemAreas = [];\n\n        /**\n         * If the last item is dragged out, highlight the entire container size to\n         * allow to re-drop it. allContentItems[ 0 ] === this.root at this point\n         *\n         * Don't include root into the possible drop areas though otherwise since it\n         * will used for every gap in the layout, e.g. splitters\n         */\n        if (allContentItems.length === 1) {\n            this._itemAreas.push(this.root._$getArea());\n            return;\n        }\n        this._$createRootItemAreas();\n\n        for (i = 0; i < allContentItems.length; i++) {\n\n            if (!(allContentItems[i].isStack)) {\n                continue;\n            }\n\n            area = allContentItems[i]._$getArea();\n\n            if (area === null) {\n                continue;\n            } else if (area instanceof Array) {\n                this._itemAreas = this._itemAreas.concat(area);\n            } else {\n                this._itemAreas.push(area);\n                var header = {};\n                copy(header, area);\n                copy(header, area.contentItem._contentAreaDimensions.header.highlightArea);\n                header.surface = (header.x2 - header.x1) * (header.y2 - header.y1);\n                this._itemAreas.push(header);\n            }\n        }\n    }\n\n    /**\n     * Takes a contentItem or a configuration and optionally a parent\n     * item and returns an initialised instance of the contentItem.\n     * If the contentItem is a function, it is first called\n     *\n     * @packagePrivate\n     *\n     * @param   {AbtractContentItem|Object|Function} contentItemOrConfig\n     * @param   {AbtractContentItem} parent Only necessary when passing in config\n     *\n     * @returns {AbtractContentItem}\n     */\n    _$normalizeContentItem(contentItemOrConfig, parent) {\n        if (!contentItemOrConfig) {\n            throw new Error('No content item defined');\n        }\n\n        if (isFunction(contentItemOrConfig)) {\n            contentItemOrConfig = contentItemOrConfig();\n        }\n\n        if (contentItemOrConfig instanceof AbstractContentItem) {\n            return contentItemOrConfig;\n        }\n\n        if ($.isPlainObject(contentItemOrConfig) && contentItemOrConfig.type) {\n            var newContentItem = this.createContentItem(contentItemOrConfig, parent);\n            newContentItem.callDownwards('_$init');\n            return newContentItem;\n        } else {\n            throw new Error('Invalid contentItem');\n        }\n    }\n\n    /**\n     * Iterates through the array of open popout windows and removes the ones\n     * that are effectively closed. This is necessary due to the lack of reliably\n     * listening for window.close / unload events in a cross browser compatible fashion.\n     *\n     * @packagePrivate\n     *\n     * @returns {void}\n     */\n    _$reconcilePopoutWindows() {\n        var openPopouts = [],\n            i;\n\n        for (i = 0; i < this.openPopouts.length; i++) {\n            if (this.openPopouts[i].getWindow().closed === false) {\n                openPopouts.push(this.openPopouts[i]);\n            } else {\n                this.emit('windowClosed', this.openPopouts[i]);\n            }\n        }\n\n        if (this.openPopouts.length !== openPopouts.length) {\n            this.openPopouts = openPopouts;\n            this.emit('stateChanged');\n        }\n\n    }\n\n    /***************************\n     * PRIVATE\n     ***************************/\n    /**\n     * Returns a flattened array of all content items,\n     * regardles of level or type\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _getAllContentItems() {\n        var allContentItems = [];\n\n        var addChildren = function(contentItem) {\n            allContentItems.push(contentItem);\n\n            if (contentItem.contentItems instanceof Array) {\n                for (var i = 0; i < contentItem.contentItems.length; i++) {\n                    addChildren(contentItem.contentItems[i]);\n                }\n            }\n        };\n\n        addChildren(this.root);\n\n        return allContentItems;\n    }\n\n    /**\n     * Binds to DOM/BOM events on init\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _bindEvents() {\n        if (this._isFullPage) {\n            $(window).resize(this._resizeFunction);\n        }\n        $(window).on('unload beforeunload', this._unloadFunction);\n    }\n\n    /**\n     * Debounces resize events\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _onResize() {\n        clearTimeout(this._resizeTimeoutId);\n        this._resizeTimeoutId = setTimeout(fnBind(this.updateSize, this), 100);\n    }\n\n    /**\n     * Extends the default config with the user specific settings and applies\n     * derivations. Please note that there's a separate method (AbstractContentItem._extendItemNode)\n     * that deals with the extension of item configs\n     *\n     * @param   {Object} config\n     * @static\n     * @returns {Object} config\n     */\n    _createConfig(config) {\n        var windowConfigKey = getQueryStringParam('gl-window');\n\n        if (windowConfigKey) {\n            this.isSubWindow = true;\n            config = localStorage.getItem(windowConfigKey);\n            config = JSON.parse(config);\n            config = (new ConfigMinifier()).unminifyConfig(config);\n            localStorage.removeItem(windowConfigKey);\n        }\n\n        config = $.extend(true, {}, defaultConfig, config);\n\n        var nextNode = (node) => {\n            for (var key in node) {\n                if (key !== 'props' && typeof node[key] === 'object') {\n                    nextNode(node[key]);\n                } else if (key === 'type' && this.isReactConfig(node)) {\n                    node.type = 'component';\n                    node.componentName = REACT_COMPONENT_ID;\n                }\n            }\n        }\n\n        nextNode(config);\n\n        if (config.settings.hasHeaders === false) {\n            config.dimensions.headerHeight = 0;\n        }\n\n        return config;\n    }\n\n    /**\n     * This is executed when GoldenLayout detects that it is run\n     * within a previously opened popout window.\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _adjustToWindowMode() {\n        var popInButton = $('<div class=\"lm_popin\" title=\"' + this.config.labels.popin + '\">' +\n            '<div class=\"lm_icon\"></div>' +\n            '<div class=\"lm_bg\"></div>' +\n            '</div>');\n\n        popInButton.click(fnBind(function() {\n            this.emit('popIn');\n        }, this));\n\n        document.title = stripTags(this.config.content[0].title);\n\n        $('head').append($('body link, body style, template, .gl_keep'));\n\n        this.container = $('body')\n            .html('')\n            .css('visibility', 'visible')\n            .append(popInButton);\n\n        /*\n         * This seems a bit pointless, but actually causes a reflow/re-evaluation getting around\n         * slickgrid's \"Cannot find stylesheet.\" bug in chrome\n         */\n        var x = document.body.offsetHeight; // jshint ignore:line\n\n        /*\n         * Expose this instance on the window object\n         * to allow the opening window to interact with\n         * it\n         */\n        window.__glInstance = this;\n    }\n\n    /**\n     * Creates Subwindows (if there are any). Throws an error\n     * if popouts are blocked.\n     *\n     * @returns {void}\n     */\n    _createSubWindows() {\n        var i, popout;\n\n        for (i = 0; i < this.config.openPopouts.length; i++) {\n            popout = this.config.openPopouts[i];\n\n            this.createPopout(\n                popout.content,\n                popout.dimensions,\n                popout.parentId,\n                popout.indexInParent\n            );\n        }\n    }\n\n    /**\n     * Determines what element the layout will be created in\n     *\n     * @private\n     *\n     * @returns {void}\n     */\n    _setContainer() {\n        var container = $(this.container || 'body');\n\n        if (container.length === 0) {\n            throw new Error('GoldenLayout container not found');\n        }\n\n        if (container.length > 1) {\n            throw new Error('GoldenLayout more than one container element specified');\n        }\n\n        if (container[0] === document.body) {\n            this._isFullPage = true;\n\n            $('html, body').css({\n                height: '100%',\n                margin: 0,\n                padding: 0,\n                overflow: 'hidden'\n            });\n        }\n\n        this.container = container;\n    }\n\n    /**\n     * Kicks of the initial, recursive creation chain\n     *\n     * @param   {Object} config GoldenLayout Config\n     *\n     * @returns {void}\n     */\n    _create(config) {\n        var errorMsg;\n\n        if (!(config.content instanceof Array)) {\n            if (config.content === undefined) {\n                errorMsg = 'Missing setting \\'content\\' on top level of configuration';\n            } else {\n                errorMsg = 'Configuration parameter \\'content\\' must be an array';\n            }\n\n            throw new ConfigurationError(errorMsg, config);\n        }\n\n        if (config.content.length > 1) {\n            errorMsg = 'Top level content can\\'t contain more then one element.';\n            throw new ConfigurationError(errorMsg, config);\n        }\n\n        this.root = new Root(this, {\n            content: config.content\n        }, this.container);\n        this.root.callDownwards('_$init');\n\n        if (config.maximisedItemId === '__glMaximised') {\n            this.root.getItemsById(config.maximisedItemId)[0].toggleMaximise();\n        }\n    }\n\n    /**\n     * Called when the window is closed or the user navigates away\n     * from the page\n     *\n     * @returns {void}\n     */\n    _onUnload() {\n        if (this.config.settings.closePopoutsOnUnload === true) {\n            for (var i = 0; i < this.openPopouts.length; i++) {\n                this.openPopouts[i].close();\n            }\n        }\n    }\n\n    /**\n     * Adjusts the number of columns to be lower to fit the screen and still maintain minItemWidth.\n     *\n     * @returns {void}\n     */\n    _adjustColumnsResponsive() {\n        // If there is no min width set, or not content items, do nothing.\n        if (!this._useResponsiveLayout() || this._updatingColumnsResponsive || !this.config.dimensions || !this.config.dimensions.minItemWidth || this.root.contentItems.length === 0 || !this.root.contentItems[0].isRow) {\n            this._firstLoad = false;\n            return;\n        }\n\n        this._firstLoad = false;\n\n        // If there is only one column, do nothing.\n        var columnCount = this.root.contentItems[0].contentItems.length;\n        if (columnCount <= 1) {\n            return;\n        }\n\n        // If they all still fit, do nothing.\n        var minItemWidth = this.config.dimensions.minItemWidth;\n        var totalMinWidth = columnCount * minItemWidth;\n        if (totalMinWidth <= this.width) {\n            return;\n        }\n\n        // Prevent updates while it is already happening.\n        this._updatingColumnsResponsive = true;\n\n        // Figure out how many columns to stack, and put them all in the first stack container.\n        var finalColumnCount = Math.max(Math.floor(this.width / minItemWidth), 1);\n        var stackColumnCount = columnCount - finalColumnCount;\n\n        var rootContentItem = this.root.contentItems[0];\n        var firstStackContainer = this._findAllStackContainers()[0];\n        for (var i = 0; i < stackColumnCount; i++) {\n            // Stack from right.\n            var column = rootContentItem.contentItems[rootContentItem.contentItems.length - 1];\n            this._addChildContentItemsToContainer(firstStackContainer, column);\n        }\n\n        this._updatingColumnsResponsive = false;\n    }\n\n    /**\n     * Determines if responsive layout should be used.\n     *\n     * @returns {bool} - True if responsive layout should be used; otherwise false.\n     */\n    _useResponsiveLayout() {\n        return this.config.settings && (this.config.settings.responsiveMode == 'always' || (this.config.settings.responsiveMode == 'onload' && this._firstLoad));\n    }\n\n    /**\n     * Adds all children of a node to another container recursively.\n     * @param {object} container - Container to add child content items to.\n     * @param {object} node - Node to search for content items.\n     * @returns {void}\n     */\n    _addChildContentItemsToContainer(container, node) {\n        if (node.type === 'stack') {\n            node.contentItems.forEach(function(item) {\n                container.addChild(item);\n                node.removeChild(item, true);\n            });\n        } else {\n            node.contentItems.forEach(fnBind(function(item) {\n                this._addChildContentItemsToContainer(container, item);\n            }, this));\n        }\n    }\n\n    /**\n     * Finds all the stack containers.\n     * @returns {array} - The found stack containers.\n     */\n    _findAllStackContainers() {\n        var stackContainers = [];\n        this._findAllStackContainersRecursive(stackContainers, this.root);\n\n        return stackContainers;\n    }\n\n    /**\n     * Finds all the stack containers.\n     *\n     * @param {array} - Set of containers to populate.\n     * @param {object} - Current node to process.\n     *\n     * @returns {void}\n     */\n    _findAllStackContainersRecursive(stackContainers, node) {\n        node.contentItems.forEach(fnBind(function(item) {\n            if (item.type == 'stack') {\n                stackContainers.push(item);\n            } else if (!item.isComponent) {\n                this._findAllStackContainersRecursive(stackContainers, item);\n            }\n        }, this));\n    }\n}\n\n/**\n * Hook that allows to access private classes\n */\n// LayoutManager.__lm = lm;\n"],"sourceRoot":""}